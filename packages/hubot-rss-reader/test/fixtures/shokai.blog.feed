<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>橋本商会 - Scrapbox</title>
        <link>https://scrapbox.io/shokai</link>
        <description>橋本商会</description>
        <lastBuildDate>Sat, 03 Aug 2019 09:17:35 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <item>
            <title><![CDATA[RAVPower PD Pioneer 61W Wall Charger - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/RAVPower_PD_Pioneer_61W_Wall_Charger</link>
            <guid>https://scrapbox.io/shokai/RAVPower_PD_Pioneer_61W_Wall_Charger</guid>
            <pubDate>Sat, 03 Aug 2019 09:17:35 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://gyazo.com/b8bd2a60d5cd577da51fb10f2d1bc801"><img src="https://gyazo.com/b8bd2a60d5cd577da51fb10f2d1bc801/raw"/></a><br /><br /><span><a href="https://scrapbox.io/shokai/RAVPower">RAVPower</a></span><span>製の</span><span><a href="https://scrapbox.io/shokai/USB-C">USB-C</a></span><span> </span><span><a href="https://scrapbox.io/shokai/AC%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF">ACアダプタ</a></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/USB_Power_Delivery">USB Power Delivery</a></span><span>に対応している</span></span><br /><span><span>&nbsp;</span>61W給電できる</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Macbook_Pro_2016%E3%81%AE%E5%85%85%E9%9B%BB">Macbook Pro 2016の充電</a></span><span>に使う為に</span><span><a href="https://scrapbox.io/shokai/%E8%B2%B7%E3%81%A3%E3%81%9F">買った</a></span><span> (2019/8/3)</span></span><br /><br /><br /><a href="https://gadget-shot.com/news/44802">MacBook Proで使える61W！RAVPowerがGaN製小型USB-C 61W充電器発売、クーポンで4,599円→3,679円 | ガジェットショット</a><br /><span><span>&nbsp;</span><span>この</span><span><a href="https://scrapbox.io/shokai/kir1ca">kir1ca</a></span><span>の記事で知った</span></span><br /><span><span>&nbsp;</span>20%オフクーポンがあったので使わせてもらった</span><br /><br /><span><a href="https://scrapbox.io/shokai/Macbook_Pro_2016">Macbook Pro 2016</a></span><span>に付属していた</span><span><a href="https://scrapbox.io/shokai/Apple_61W_USB-C%E9%9B%BB%E6%BA%90%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF">Apple 61W USB-C電源アダプタ</a></span><span>と性能は同じ</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%AA%92%E5%8C%96%E3%82%AC%E3%83%AA%E3%82%A6%E3%83%A0">窒化ガリウム</a></span><span>を使っているおかげでサイズが小さいらしい</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/f4b4190022036982695db44459ba3613"><img src="https://gyazo.com/f4b4190022036982695db44459ba3613/raw"/></a></span><br /><span><span>&nbsp;</span>コンセントに刺す部分が折り畳める</span><br /><span><span>&nbsp;</span>体積は半分ぐらい</span><br /><br /><br /><span><a href="https://scrapbox.io/shokai/%E7%AA%92%E5%8C%96%E3%82%AC%E3%83%AA%E3%82%A6%E3%83%A0">窒化ガリウム</a></span><span>を使ったUSB-C充電器としては、先に</span><span><a href="https://scrapbox.io/shokai/Anker">Anker</a></span><span>の30Wのやつが発売されていた</span><br /><span><span>&nbsp;</span><span>しかし30Wでは、</span><span><a href="https://scrapbox.io/shokai/Macbook_Pro_2016">Macbook Pro 2016</a></span><span>には足りない</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/Apple_29W_USB-C%E9%9B%BB%E6%BA%90%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF">Apple 29W USB-C電源アダプタ</a></span><span>を使っていた経験からわかっている</span></span><br /><span><span>&nbsp;&nbsp;</span>一応充電はできるが、Dockerコンテナたくさん起動して開発しながらだと1時間で20%しか充電が進まない</span><br /><span><span>&nbsp;</span>コンセントに刺す部分が折り畳めない</span><br /><span><span>&nbsp;</span>ので買わなかった</span><br /><br />使ってみた<br /><span><span>&nbsp;</span>充電できた</span><br /><span><span>&nbsp;&nbsp;</span>Dockerコンテナたくさん起動して開発しながら、66%→88%まで20分ぐらいだった</span><br /><span><span>&nbsp;&nbsp;</span>ちゃんと60W出てそう</span><br /><span><span>&nbsp;</span>けっこう温かくなる</span><br /><span><span>&nbsp;&nbsp;</span>炎上はしないとは思うけど、コンセントの隣の充電器等に接触させると危なそう</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[Macbook Pro 2016の充電 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/Macbook_Pro_2016%E3%81%AE%E5%85%85%E9%9B%BB</link>
            <guid>https://scrapbox.io/shokai/Macbook_Pro_2016%E3%81%AE%E5%85%85%E9%9B%BB</guid>
            <pubDate>Sat, 03 Aug 2019 08:59:17 GMT</pubDate>
            <description><![CDATA[<span><a href="https://scrapbox.io/shokai/Macbook_Pro_2016">Macbook Pro 2016</a></span><span>の</span><span><a href="https://scrapbox.io/shokai/USB-C">USB-C</a></span><span>での</span><span><a href="https://scrapbox.io/shokai/%E5%85%85%E9%9B%BB">充電</a></span><span>について</span><br /><br /><span><a href="https://scrapbox.io/shokai/USB_Power_Delivery">USB Power Delivery</a></span><span>に対応しているACアダプタからじゃ無いとまともな速度で充電できない</span><br /><br /><span><a href="https://scrapbox.io/shokai/USB_Power_Delivery">USB Power Delivery</a></span><span>に対応していない場合</span><br /><span><span>&nbsp;</span><span>5年ぐらい前の</span><span><a href="https://scrapbox.io/shokai/iPad">iPad</a></span><span>に付属していた5V2AのUSB ACアダプタから充電</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/521edf12107233e287f6e26a8a4aa17b"><img src="https://gyazo.com/521edf12107233e287f6e26a8a4aa17b/raw"/></a></span><br /><span><span>&nbsp;</span>じわじわと充電されたり、されなかったりする</span><br /><span><span>&nbsp;&nbsp;</span>88%の時点で、完了まで10時間とか</span><br /><span><span>&nbsp;&nbsp;</span>電池残量が減らなくはなる</span><br /><br />変遷<br /><span><span>&nbsp;</span>2016年</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/Apple_61W_USB-C%E9%9B%BB%E6%BA%90%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF">Apple 61W USB-C電源アダプタ</a></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>Macbook Proに付属していた大きなACアダプタ</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/Apple_29W_USB-C%E9%9B%BB%E6%BA%90%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF">Apple 29W USB-C電源アダプタ</a></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>小さく持ち運びやすい</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>Macbook Proに対しては充電速度が足りない</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>開発しながらだと1時間で20%ぐらいしか充電できない</span><br /><span><span>&nbsp;</span>2017年</span><br /><span><span>&nbsp;&nbsp;</span>結局61W必要だとわかったので、付属の大きなACアダプタに戻った</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/RAVPower_PD_Pioneer_61W_Wall_Charger">RAVPower PD Pioneer 61W Wall Charger</a></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%AA%92%E5%8C%96%E3%82%AC%E3%83%AA%E3%82%A6%E3%83%A0">窒化ガリウム</a></span><span>のおかげで付属の大きなACアダプタと同等の性能が、半分の体積で出せる様になったらしい</span></span><br /><span><span>&nbsp;&nbsp;</span><span>今使ってる</span><span>shokai.icon</span><span> (2019/8/3)</span></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[天ぷらたかお - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E5%A4%A9%E3%81%B7%E3%82%89%E3%81%9F%E3%81%8B%E3%81%8A</link>
            <guid>https://scrapbox.io/shokai/%E5%A4%A9%E3%81%B7%E3%82%89%E3%81%9F%E3%81%8B%E3%81%8A</guid>
            <pubDate>Sat, 03 Aug 2019 08:50:43 GMT</pubDate>
            <description><![CDATA[<br /><span><a href="https://scrapbox.io/shokai/%E7%A6%8F%E5%B2%A1">福岡</a></span><span>の</span><span><a href="https://scrapbox.io/shokai/%E5%A4%A9%E3%81%B7%E3%82%89">天ぷら</a></span><span>屋</span><br /><span><span>&nbsp;</span><a href="http://tempura-takao.jp/">http://tempura-takao.jp/</a></span><br /><br /><a href="https://gyazo.com/6b0acfdb0cec5c143ba8e2ddb02d4c29"><img src="https://gyazo.com/6b0acfdb0cec5c143ba8e2ddb02d4c29/raw"/></a><br /><br /><span><a href="https://scrapbox.io/shokai/FGN%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2Meetup_vol.1">FGNエンジニアMeetup vol.1</a></span><span>に行った時に、</span><span><a href="https://scrapbox.io/shokai/%E5%A4%A9%E7%A5%9E">天神</a></span><span>のパルコの地下で食べた</span><br /><span><span>&nbsp;</span><span>とてもおいしかった</span><span>shokai.icon*10</span></span><br /><br />横浜のジョイナスにも店がある事に気づき、以後2週間に1回ぐらい行っている<br /><br />特徴<br /><span><span>&nbsp;</span>衣が非常に薄く、パリッとしている</span><br /><span><span>&nbsp;&nbsp;</span>油の重い感じが全く無い</span><br /><span><span>&nbsp;</span>1000円以下でお腹いっぱい食べれる</span><br /><span><span>&nbsp;</span>だいたい3個ずつ揚げて卓上の網に配信してくれる</span><br /><span><span>&nbsp;&nbsp;</span>定食だと3個×3セットぐらい来る</span><br /><span><span>&nbsp;</span>明太子の昆布あえが無料でおかわりできる</span><br /><span><span>&nbsp;</span>単品で1つずつ頼んでも良い</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[相談 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E7%9B%B8%E8%AB%87</link>
            <guid>https://scrapbox.io/shokai/%E7%9B%B8%E8%AB%87</guid>
            <pubDate>Fri, 26 Jul 2019 10:26:09 GMT</pubDate>
            <description><![CDATA[<a href="https://gyazo.com/56ab80dc0779325d511691abfc376ede"><img src="https://gyazo.com/56ab80dc0779325d511691abfc376ede/raw"/></a><br /><br /><span><span>&nbsp;</span>わからない事を他人と話し合って、一緒に考える事</span><br /><span><span>&nbsp;</span><span>大抵の相談者は、自分が何がわからないのかがわかっていない (</span><span><a href="https://scrapbox.io/shokai/unknown-unknowns">unknown-unknowns</a></span><span>)</span></span><br /><br />会話やチャットは、何がわからないかわからない状態でも開始できる<br /><span><span>&nbsp;</span>1回にやりとりされるサイズが細切れ</span><br /><span><span>&nbsp;</span>不完全でもいいという共通了解がある</span><br /><span><span>&nbsp;</span>何も得られなくても良いや、という結果を求めない投げやりさ</span><br /><span><span>&nbsp;</span>しかし、やりとりの中で何がわからなかったのかがわかってくる</span><br /><br /><span>今存在する</span><span><a href="https://scrapbox.io/shokai/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%83%84%E3%83%BC%E3%83%AB">ドキュメントツール</a></span><span>は相談ができない</span><br /><span><span>&nbsp;</span>先にタイトルを決め、カテゴリを決め、置き場所を決める</span><br /><span><span>&nbsp;</span>何がわからないかわからないのに、書いた後の利用のされ方に基づいたメタデータの入力が必要</span><br /><span><span>&nbsp;&nbsp;</span>メタデータ入れないとえらい人に怒られる</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E6%AD%BB%E3%82%93%E3%81%A0%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E7%BD%AE%E3%81%84%E3%81%A6%E3%81%8A%E3%81%8F%E5%80%89%E5%BA%AB%E3%81%AB%E3%81%97%E3%81%AA%E3%81%84#5969b54597c2910000f323a9">死んだテキストを置いておく倉庫にしない#5969b54597c2910000f323a9</a></span><br /><br /><br /><span>Scrapboxには、</span><span><a href="https://scrapbox.io/shokai/%E7%9B%B8%E8%AB%87%E3%81%A7%E3%81%8D%E3%82%8B%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%83%84%E3%83%BC%E3%83%AB">相談できるドキュメントツール</a></span><span>になれる可能性がある</span><br /><span><span>&nbsp;</span><span>相談できる環境には、</span><span><a href="https://scrapbox.io/shokai/%E5%AE%8C%E5%85%A8%E3%81%AB%E6%95%B4%E3%81%88%E3%81%AA%E3%81%84">完全に整えない</a></span><span>で済む雰囲気が必要</span></span><br /><span><span>&nbsp;&nbsp;</span>わからないまま開始して、わからないまま終わるのを許す投げやりな雰囲気</span><br /><span><span>&nbsp;&nbsp;</span>2,3年くらい考えてわかればいいじゃんみたいな</span><br /><span><span>&nbsp;</span>本当にわかる為にはプロトタイプを作るとか、人に見せるとかするプロセスが必要</span><br /><span><span>&nbsp;&nbsp;</span>このへんの話</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/%E4%B8%8B%E6%89%8B%E3%81%AB%E8%A8%80%E8%AA%9E%E5%8C%96%E3%81%97%E3%81%AA%E3%81%84#5a0cd62497c291000067cc2a">下手に言語化しない#5a0cd62497c291000067cc2a</a></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://scrapbox.io/rakusai/%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AEWiki%E3%81%AF%E6%9B%B8%E3%81%8D%E3%81%8B%E3%81%91">/rakusai/すべてのWikiは書きかけ</a></span><br /><span><span>&nbsp;&nbsp;</span>無理やり結論出さなくていい雰囲気を作りたい</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>は考える為に書くツールだから</span></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[Nondestructive TypeScript.md - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/Nondestructive_TypeScript.md</link>
            <guid>https://scrapbox.io/shokai/Nondestructive_TypeScript.md</guid>
            <pubDate>Wed, 17 Jul 2019 06:33:42 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://gist.github.com/mizchi/9e71569f72187af749adfecea49fb38a">Nondestructive_TypeScript.md</a><br /><br /><span><a href="https://scrapbox.io/shokai/mizchi">mizchi</a></span><span>による</span><span><a href="https://scrapbox.io/shokai/TypeScript">TypeScript</a></span><span>の導入方法の解説</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[Increments、Qiita の振り返りと未来への挑戦 2017 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/Increments%E3%80%81Qiita_%E3%81%AE%E6%8C%AF%E3%82%8A%E8%BF%94%E3%82%8A%E3%81%A8%E6%9C%AA%E6%9D%A5%E3%81%B8%E3%81%AE%E6%8C%91%E6%88%A6_2017</link>
            <guid>https://scrapbox.io/shokai/Increments%E3%80%81Qiita_%E3%81%AE%E6%8C%AF%E3%82%8A%E8%BF%94%E3%82%8A%E3%81%A8%E6%9C%AA%E6%9D%A5%E3%81%B8%E3%81%AE%E6%8C%91%E6%88%A6_2017</guid>
            <pubDate>Tue, 16 Jul 2019 04:58:31 GMT</pubDate>
            <description><![CDATA[<a href="https://increments.connpass.com/event/59681/">https://increments.connpass.com/event/59681/</a><br /><br /><span>2017年、</span><span><a href="https://scrapbox.io/shokai/Increments">Increments</a></span><span> の今を見せます。</span><br /><span>Increments 海野とアドバイザー及川がこれまでの取り組みについて振り返りを行います。 Increments と </span><span><a href="https://scrapbox.io/shokai/Qiita">Qiita</a></span><span> での取り組みはどのような背景、社内でのディスカッションがあったのか、成功だったのか失敗だったのか、これまで語られてこなかった生の情報をお話します。</span><br />Qiita・Qiita:Team をご利用の方、今後 Qiita・Qiita:Team のご利用を検討している方も、ぜひご参加ください！<br /><br />日時<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/2017%E5%B9%B46%E6%9C%88">2017年6月</a></span><span>26日(月) 19:30〜</span></span><br /><br />場所<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E5%85%AD%E6%9C%AC%E6%9C%A8">六本木</a></span><span> </span><span><a href="https://scrapbox.io/shokai/Freakout">Freakout</a></span><span>社の5階</span></span><br /><br /><span>向かってる</span><span>shokai.icon</span><br /><br /><span>ついた</span><span>shokai.icon</span><br /><span><span>&nbsp;</span>アンケート書く</span><br /><span><span>&nbsp;</span>もらったステッカーがデカい</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/2e5b92067c6bcf2f050324add5d28280"><img src="https://gyazo.com/2e5b92067c6bcf2f050324add5d28280/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>存在感があっていいかも</span><br /><span><span>&nbsp;&nbsp;</span>Macbookを1/4ぐらい覆うサイズのステッカーほしい</span><br /><br />最近scrapboxはログインしてればリアルタイムに編集がみえるようになった<br /><span><span>&nbsp;</span>ここにテストとしてメモ実況書いてみる</span><br /><br />メモ<br /><br /><strong>登壇者紹介</strong><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E5%8F%8A%E5%B7%9D%E5%8D%93%E4%B9%9F">及川卓也</a></span><br /><span><span>&nbsp;&nbsp;</span>MSでWindows開発</span><br /><span><span>&nbsp;&nbsp;</span>グーグルでプロジダクトマネージャ</span><br /><span><span>&nbsp;&nbsp;</span>Qiitaに入った後さらに独立フリーランス</span><br /><span><span>&nbsp;&nbsp;</span>VR買った</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E6%B5%B7%E9%87%8E%E5%BC%98%E6%88%90">海野弘成</a></span><br /><span><span>&nbsp;&nbsp;</span>@yaotti</span><br /><span><span>&nbsp;&nbsp;</span>社長</span><br /><span><span>&nbsp;&nbsp;</span><span>大学の頃は</span><span><a href="https://scrapbox.io/shokai/Dalvik_VM">Dalvik VM</a></span><span>のメモリ管理をいじったりしていた</span></span><br /><span><span>&nbsp;&nbsp;</span>禁酒はじめた</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>酒に強い</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>社員は社長を酒で潰す目標をもっている</span><br /><br /><strong>海野視点でみるIncrementsのこれまで</strong><br /><span><span>&nbsp;</span>なんでyaottiなの</span><br /><span><span>&nbsp;&nbsp;</span>大学時代のあだならしい</span><br /><span><span>&nbsp;&nbsp;</span><span>なんでなんだろう</span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>プログラミングはじめたのは大学入ってから</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>工学部の情報学科</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/scheme">scheme</a></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>経営とコンピューター両方興味がある</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>金持ち父さん貧乏父さんという本で目から鱗が落ちた</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>しくみを作るのが好き</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%81%AF%E3%81%A6%E3%81%AA">はてな</a></span><span>のインターンでプログラミングが面白くなった</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>大学では</span><span><a href="https://scrapbox.io/shokai/%E9%BA%BB%E9%9B%80">麻雀</a></span><span>ばかりやっていた</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>まあコンピューターと似ている所もある</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/Google">Google</a></span><span>インターンも行った</span></span><br /><span><span>&nbsp;&nbsp;</span>ビジネスコンテストで出会った3人でQiitaを作った</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>2011年</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>2人はコンテスト運営で社会人</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>教科書を買い取って中古で売るビジネス</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>コンテストの評価は良くなかった</span><br /><span><span>&nbsp;&nbsp;</span>最初はQ&amp;Aサービス</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>2ヶ月ぐらいだけ</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>質問に10分ぐらいで回答がつく</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>みんな語りたい</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>むしろ質問の方がでない</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>web系の質問が多い</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>stackoverflow等で質問した事ある人</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>会場：ぜんぜんいない</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>やはり質問するのは難しい、文章で質問ができる時点で半分以上は解決できてるし</span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>名前の由来</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>Q&amp;AのQ〜Aに当てはまる単語をサービス名にした</span><br /><span><span>&nbsp;&nbsp;</span>Q&amp;Aから情報共有サービスに2ヶ月で切り替えた</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>しばらくは学業や本業のサイドプロジェクトだった</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>いい感じに伸びていたので大学卒業して起業</span><br /><span><span>&nbsp;&nbsp;</span>「知らないと損するプログラマ向けツール」というシリーズにはてブがたくさんついて人が増えた</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>2012年ごろ</span><br /><br /><span><span>&nbsp;</span>及川</span><br /><span><span>&nbsp;&nbsp;</span>Googleで仕事していたらテレビに出た</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>2012年ごろ</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>プロフェッショナル仕事の流儀</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>それでtwitterのfollowerが倍増した</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>その頃海野と知り合って盛り上がった</span><br /><br /><span><span>&nbsp;</span>2015年ごろ</span><br /><span><span>&nbsp;&nbsp;</span>社員が一気に増えた</span><br /><span><span>&nbsp;&nbsp;</span><span>htomine.icon</span><span>や</span><span><a href="https://scrapbox.io/shokai/mizchi">mizchi</a></span><span>や</span><span><a href="https://scrapbox.io/shokai/r7kamura">r7kamura</a></span><span>など</span></span><br /><br /><span><span>&nbsp;</span>作った人の思想的な背景がある</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/hackernews">hackernews</a></span><span>、</span><span><a href="https://scrapbox.io/shokai/digg">digg</a></span><span>、</span><span><a href="https://scrapbox.io/shokai/reddit">reddit</a></span><span>など</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>こういう使い方をしろというパトロールをしてユーザーを教育している</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>初期の個人blogに書いてある</span><br /><span><span>&nbsp;&nbsp;</span>そういうのを海野に語らせたくて、引っ張り出してきた</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>いい話だ</span><span>shokai.icon</span></span><br /><br />休憩<br /><br /><strong>現状</strong><br /><span><span>&nbsp;</span>ユーザー数、投稿数は増えてる</span><br /><span><span>&nbsp;</span>月間300万UU突破</span><br /><span><span>&nbsp;</span>Qiita登録人数は10数万人</span><br /><span><span>&nbsp;&nbsp;</span>国内ITエンジニアの人数は100万人と言われているので、まだまだアプローチできる人がいる</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>調べたけど100万ではなく50〜80万ぐらい（及川）</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>IPAの資料を見直したけど、ちょっと足し算しすぎだった</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>プログラムしそうな人を全部足していっている</span><br /><br /><span><span>&nbsp;</span>話</span><br /><span><span>&nbsp;&nbsp;</span>スライド機能</span><br /><span><span>&nbsp;&nbsp;</span>人気の投稿</span><br /><span><span>&nbsp;&nbsp;</span>Contribution機能 v2-v3</span><br /><span><span>&nbsp;&nbsp;</span>いいね機能</span><br /><span><span>&nbsp;&nbsp;</span>ストック一覧v2</span><br /><span><span>&nbsp;&nbsp;</span>アドベントカレンダー</span><br /><span><span>&nbsp;&nbsp;</span>Organization v2</span><br /><span><span>&nbsp;&nbsp;</span>ガイドライン</span><br /><span><span>&nbsp;&nbsp;</span>Qiitadon</span><br /><br /><span><span>&nbsp;</span>いいね機能</span><br /><span><span>&nbsp;&nbsp;</span>去年ついた機能</span><br /><span><span>&nbsp;&nbsp;</span>ストック機能に「保存」と「良い」という2つの意味があった</span><br /><span><span>&nbsp;&nbsp;</span>分けた</span><br /><span><span>&nbsp;&nbsp;</span>ストックをしない人がいる</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>ブックマークやEvernoteに保存するから</span><br /><span><span>&nbsp;&nbsp;</span>UI変更してもSNS上で見えるのは文句ばかり</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>待ってれば収まるのか、本当にダメなのか？</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>いろいろ考えて微調整していく</span><br /><br /><span><span>&nbsp;</span>編集リクエスト</span><br /><span><span>&nbsp;&nbsp;</span>古くなった記事を修正するリクエスト</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>最初は正しい記事でも、1年経つと間違いになっていたりする</span><br /><span><span>&nbsp;&nbsp;</span>Contribution値が編集リクエストにも付くようになった</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>Contributionという数値はみんな見ているのだろうか？</span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>大きな数字だと変化量がわかりにくい気がする</span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>もっと使ってほしい</span><br /><span><span>&nbsp;&nbsp;</span>これまでのblog等は1人が記事に責任をもっていた</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>コミュニティで良くしていく</span><br /><span><span>&nbsp;&nbsp;</span>誤字脱字の修正ならあるけど、大幅な書き換えが難しい</span><br /><br /><span><span>&nbsp;</span>ガイドライン</span><br /><span><span>&nbsp;&nbsp;</span>及川の最後の仕事</span><br /><span><span>&nbsp;&nbsp;</span>新しく何かを言うつもりはなかった</span><br /><span><span>&nbsp;&nbsp;</span>「プログラム情報の共有サイト」というヘッダ等に書いてある事を文章にしたら炎上した</span><br /><span><span>&nbsp;&nbsp;</span>こういう世界を作りたいというのを表現しようとした</span><br /><span><span>&nbsp;&nbsp;</span>他のコミュニティガイドラインも研究した</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>基本的に禁止事項が書いてある</span><br /><span><span>&nbsp;&nbsp;</span>こういう事をやっていこうというのを書いたら伝わらなかった</span><br /><span><span>&nbsp;&nbsp;</span>「プログラミング」という言葉の定義が曖昧だった</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>ソフトウェア？再実行できる？</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>まだ表現が見つかっていない</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>政治やスポーツは明らかに関係ない</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>プログラマが好きなレシピ、は違う？</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>機能でそれを表現しろ、とユーザーに怒られた</span><br /><span><span>&nbsp;&nbsp;</span>性善説</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>downvote機能についての議論</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>編集リクエストと衝突する</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>downされた後、upvoteされないだろう</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>stackoverflowはよくできてる</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>カテゴリのスコープ分け</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>民主的にコミュニティが自治している</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>badgeを与えたり</span><br /><br /><strong>Closing talk</strong><br /><span><span>&nbsp;</span>Qiita:Teamは企業1万人使っている</span><br /><span><span>&nbsp;</span>来月teamのiOSアプリ出す</span><br /><span><span>&nbsp;</span>Work:Qというメディアをはじめる</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://workq.qiita.com">https://workq.qiita.com</a></span><br /><span><span>&nbsp;&nbsp;</span>働き方がテーマ</span><br /><span><span>&nbsp;&nbsp;</span>社の考えなどを発信する</span><br /><br /><br />]]></description>
        </item>
        <item>
            <title><![CDATA[和平フレイズ Amazon限定フライパン - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E5%92%8C%E5%B9%B3%E3%83%95%E3%83%AC%E3%82%A4%E3%82%BA_Amazon%E9%99%90%E5%AE%9A%E3%83%95%E3%83%A9%E3%82%A4%E3%83%91%E3%83%B3</link>
            <guid>https://scrapbox.io/shokai/%E5%92%8C%E5%B9%B3%E3%83%95%E3%83%AC%E3%82%A4%E3%82%BA_Amazon%E9%99%90%E5%AE%9A%E3%83%95%E3%83%A9%E3%82%A4%E3%83%91%E3%83%B3</guid>
            <pubDate>Mon, 15 Jul 2019 13:40:09 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://gyazo.com/c5e659f112f3b50948714be78cc07d74"><img src="https://gyazo.com/c5e659f112f3b50948714be78cc07d74/raw"/></a><br /><br /><a href="https://www.amazon.co.jp/dp/B00U8PU2ZU/shokai-22">https://www.amazon.co.jp/dp/B00U8PU2ZU/shokai-22</a><br /><br /><span>2019/4ごろ買った</span><span><a href="https://scrapbox.io/shokai/%E3%83%95%E3%83%A9%E3%82%A4%E3%83%91%E3%83%B3">フライパン</a></span><br /><br />何作るにも良い<br /><span><span>&nbsp;</span>張り付かない</span><br /><span><span>&nbsp;</span>深さがあって、トマトソースとか飛び散らない</span><br /><br />あとすごい安い<br /><span><span>&nbsp;</span>1800円ぐらい</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[スライドを印刷 & PDFに書き出す - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89%E3%82%92%E5%8D%B0%E5%88%B7_&amp;_PDF%E3%81%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%99</link>
            <guid>https://scrapbox.io/shokai/%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89%E3%82%92%E5%8D%B0%E5%88%B7_&amp;_PDF%E3%81%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%99</guid>
            <pubDate>Mon, 15 Jul 2019 06:16:42 GMT</pubDate>
            <description><![CDATA[<br /><span>いつのまにか動かなくなってた</span><span>shokai.icon</span><br /><br /><span><a href="https://scrapbox.io/shokai/%E3%83%97%E3%83%AC%E3%82%BC%E3%83%B3%E3%83%A2%E3%83%BC%E3%83%89">プレゼンモード</a></span><span>で作った</span><span><a href="https://scrapbox.io/shokai/%E7%99%BA%E8%A1%A8%E8%B3%87%E6%96%99">発表資料</a></span><span>を印刷できるようにした</span><br /><br /><span>こういう</span><span><a href="https://scrapbox.io/shokai/pdf">pdf</a></span><span>が作れる</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/3e27ee39a56c0afdeb40c67d12049bea"><img src="https://gyazo.com/3e27ee39a56c0afdeb40c67d12049bea/raw"/></a></span><br /><br /><br /><span><a href="https://scrapbox.io/shokai/Firefox">Firefox</a></span><span>で印刷する</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/c91bf90cca9ee53f1847582fd2137658"><img src="https://gyazo.com/c91bf90cca9ee53f1847582fd2137658/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>紙の向きは横</span><br /><span><span>&nbsp;&nbsp;</span>ヘッダー・フッターを全て「なし」にしてから</span><br /><span><span>&nbsp;&nbsp;</span>PDFで書き出し</span><br /><br /><span><span>&nbsp;</span>今のところ、Firefoxじゃないと正しく印刷できない</span><br /><span><span>&nbsp;&nbsp;</span>Chrome系ブラウザは改ページが認識されない</span><br /><span><span>&nbsp;&nbsp;</span>親要素で複雑なCSSレイアウトをしているとうまくいかないようだ？</span><br /><span><span>&nbsp;&nbsp;</span>よくわからない</span><br /><span><span>&nbsp;&nbsp;</span>多くの人が苦しんでいて、DOM構造を大きく変える事以外で誰も解決できていないので、あきらめた</span><br /><br /><br />実装<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%83%97%E3%83%AC%E3%82%BC%E3%83%B3%E3%83%A2%E3%83%BC%E3%83%89%E3%82%92%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%81%E3%81%8F%E3%82%8A%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8F%E7%B8%A6%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AB%E3%81%99%E3%82%8B">プレゼンモードをページめくりではなく縦スクロールにする</a></span><span>を応用した</span></span><br /><span><span>&nbsp;</span><span>各slide sectionの最終行に</span><span>page-break-before: always;</span><span>を付けるだけ</span></span><br /><br />pdfにしたら画像が小さい場合<br /><span><span>&nbsp;</span><span>[画像URl]</span><span>を</span><span>[[画像URL]]</span><span>にすると横100%サイズになる</span></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[トマトすき焼き - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E3%83%88%E3%83%9E%E3%83%88%E3%81%99%E3%81%8D%E7%84%BC%E3%81%8D</link>
            <guid>https://scrapbox.io/shokai/%E3%83%88%E3%83%9E%E3%83%88%E3%81%99%E3%81%8D%E7%84%BC%E3%81%8D</guid>
            <pubDate>Fri, 05 Jul 2019 07:16:49 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://note.mu/travelingfoodlab/n/ne92b74363720">たまの贅沢『トマトすき焼きの作り方』｜樋口直哉(TravelingFoodLab.)｜note</a><br /><span><span>&nbsp;</span><span>うまそう</span><span>shokai.icon</span></span><br /><br />情報元<br /><span><span>&nbsp;</span><a href="https://twitter.com/odiak_/status/1147004326134464512">https://twitter.com/odiak_/status/1147004326134464512</a></span><br /><br />今日試してみるか<br />]]></description>
        </item>
        <item>
            <title><![CDATA[markdownはデカイ文字を書くのに便利 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/markdown%E3%81%AF%E3%83%87%E3%82%AB%E3%82%A4%E6%96%87%E5%AD%97%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%AE%E3%81%AB%E4%BE%BF%E5%88%A9</link>
            <guid>https://scrapbox.io/shokai/markdown%E3%81%AF%E3%83%87%E3%82%AB%E3%82%A4%E6%96%87%E5%AD%97%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%AE%E3%81%AB%E4%BE%BF%E5%88%A9</guid>
            <pubDate>Tue, 25 Jun 2019 10:11:28 GMT</pubDate>
            <description><![CDATA[<br /><span>あなたが</span><span>#</span><span>を書く時、プラットフォームもまた</span><span>&lt;h1&gt;</span><span>を宣言しているのだ</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/0f4d04297dd1ca7a57e58553e4ec805c"><img src="https://gyazo.com/0f4d04297dd1ca7a57e58553e4ec805c/raw"/></a></span><br /><br /><span>Scrapboxについては</span><span><a href="https://scrapbox.io/shokai/Scrapbox%E3%81%AB%E8%A6%8B%E5%87%BA%E3%81%97%E3%81%AE%E8%A8%98%E6%B3%95%E3%81%AF%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%AA%E3%81%84">Scrapboxに見出しの記法は存在しない</a></span><span>を読んでね</span><br /><br /><br />以下、理由などを詳しく書く<br /><br />酒を飲んで色々考えた<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/markdown">markdown</a></span><span>はとにかくデカイ文字が簡単に書ける事が便利なだけなのでは？</span></span><br /><span><span>&nbsp;</span><span>宣言した文書構造を有意義に使う方法がスクリーンリーダーと索引生成以外に何かあれば教えて欲しい</span><span>shokai.icon*5</span></span><br /><br /><br /><span><a href="https://scrapbox.io/shokai/markdown">markdown</a></span><span>が大好き！！！ という主張をよく見かける</span><br /><span><span>&nbsp;</span>0. テキスト表示とHTML表示がほぼ同じなので、どちらでも読める</span><br /><span><span>&nbsp;</span>1. リンクや打ち消し線等の文字装飾がしたい</span><br /><span><span>&nbsp;</span>2. リスト記法が使いたい</span><br /><span><span>&nbsp;</span><span>3. </span><span>#</span><span>で</span><span>&lt;h1&gt;</span><span> </span><span>&lt;h2&gt;</span><span>になる文書構造化がしたい</span></span><br /><br />3が多い（と思う）<br /><span><span>&nbsp;</span>0〜3のどれを指しているのかは、人によって違う</span><br /><br /><br /><img src="0. テキスト表示とHTML表示がほぼ同じ"/><br /><span><span>&nbsp;</span><span>これは最近の</span><span><a href="https://scrapbox.io/shokai/%E8%BB%BD%E9%87%8F%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E8%A8%80%E8%AA%9E">軽量マークアップ言語</a></span><span>では当たり前なので</span><span>/icons/わかる.icon</span></span><br /><span><span>&nbsp;</span>重要だと思う</span><br /><span><span>&nbsp;</span><span>しかし、</span><span>#</span><span>の数でh1, h2になるのはmarkdown以前から</span><span><a href="https://scrapbox.io/shokai/RDoc">RDoc</a></span><span>が既に実現していたし</span></span><br /><span><span>&nbsp;</span><span>-</span><span>がリストになるのはもっと昔の</span><span><a href="https://scrapbox.io/shokai/plain2">plain2</a></span><span>とかの時代からあった</span></span><br /><br /><br /><img src="1. 文字装飾 について"/><br />画像にリンクを付ける<br /><span><span>&nbsp;</span><span>[![画像タイトル](画像URL)](リンク先URL)</span><span> </span></span><br /><span><span>&nbsp;</span>かっこつけすぎ</span><br />そもそも画像とリンクの区別が意味不明<br /><span><span>&nbsp;</span>[リンクタイトル](リンク先URL)</span><br /><span><span>&nbsp;</span>![画像タイトル](画像URL)</span><br /><span><span>&nbsp;&nbsp;</span><span>なんで</span><span>!</span><span>の有無で区別するのか</span></span><br /><span><span>&nbsp;&nbsp;</span><span>!</span><span>から画像を連想できる人がいるのか</span></span><br /><br />文字装飾が環境によって違う<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/github">github</a></span><span>で </span><span>*あいうえお*</span><span> → 斜体</span></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/slack">slack</a></span><span>で </span><span>*あいうえお*</span><span> → 太字</span></span><br /><span><span>&nbsp;</span>エディタによっても全然違う</span><br /><br />本気で使うと<br /><span><span>&nbsp;</span>いろいろな環境で取り消し線や斜体の記法が全然違って全然汎用性が無い</span><br />なぜ人々がこれを「わかりやすい」と持ち上げるのか<br /><span><span>&nbsp;</span>謎すぎる</span><br /><span><span>&nbsp;</span>実務でのmarkdown経験が3年未満なのでは？</span><br /><span><span>&nbsp;</span>雑誌の記事markdownで書いてたら自分のエディタと編集者のエディタとgithubで表示が違って面倒くさかった</span><br /><br /><br /><img src="2. リスト記法"/><br /><span><span>&nbsp;</span>ハイフンでリストになるのは良いと思う</span><br /><span><span>&nbsp;&nbsp;</span><span>でも</span><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>の</span><span><a href="https://scrapbox.io/help/%E8%A8%98%E6%B3%95">/help/記法</a></span><span>のように、ハイフン付けなくてもリストになればもっとスマートだと思う</span></span><br /><span><span>&nbsp;</span><span>行頭に</span><span>数字. </span><span>を付けると</span><span>&lt;ol&gt;</span><span>リストになるのも良い</span></span><br /><span><span>&nbsp;&nbsp;</span>でもgithubのこれはやり過ぎでは？</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/c95a11791930e11853f8186ba45e43b0"><img src="https://gyazo.com/c95a11791930e11853f8186ba45e43b0/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>「テキスト表示とHTML表示が同じ」という利点から離れていっている</span><br /><br /><br /><span>3. </span><span>#</span><span>で</span><span>&lt;h1&gt;</span><span> </span><span>&lt;h2&gt;</span><span><img src="になる文書構造化がしたい"/></span><br /><span><span>&nbsp;</span><span>markdownで宣言した文章構造・</span><span><a href="https://scrapbox.io/shokai/%E3%82%BB%E3%83%9E%E3%83%B3%E3%83%86%E3%82%A3%E3%82%AF%E3%82%B9">セマンティクス</a></span><span>を他に流用する事はほぼ無い</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E8%A6%8B%E5%87%BA%E3%81%97">見出し</a></span><span>の自動生成</span></span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC">スクリーンリーダー</a></span><br /><span><span>&nbsp;&nbsp;</span>他にあるのか？</span><br /><br /><span>セマンティクスを重視するなら</span><span>###</span><span>から開始するべき</span><br /><span><span>&nbsp;</span><span>&lt;h1&gt;</span><span>や</span><span>&lt;h2&gt;</span><span>はプラットフォーム側も使っている</span></span><br /><span><span>&nbsp;</span><span><a href="https://gyazo.com/0f4d04297dd1ca7a57e58553e4ec805c"><img src="https://gyazo.com/0f4d04297dd1ca7a57e58553e4ec805c/raw"/></a></span><span><a href="https://gyazo.com/76307293bdf695b8f3e12aa359117fab"><img src="https://gyazo.com/76307293bdf695b8f3e12aa359117fab/raw"/></a></span></span><br /><span><span>&nbsp;</span><span>記事内の章立ては</span><span>&lt;h3&gt;</span><span>から開始されるべきではないか？</span></span><br /><span><span>&nbsp;</span><span>プラットフォーム側は</span><span>#</span><span>を2つ自動加算するべき？</span></span><br /><br /><br />使わない文書構造の宣言に意味があるのか？<br /><span><span>&nbsp;</span>「文字が大きくなって格好いい」以上の意味がない</span><br /><span><span>&nbsp;</span>使わないのにせっせと構造を宣言しているの、マジで意味わからん</span><br /><br /><span>#</span><span>で超デカイ文字、</span><span>##</span><span>でデカイ文字、</span><span>###</span><span>でそこそこデカイ文字</span><br /><span><span>&nbsp;</span>シャープの数が少ないほうが文字が大きくなる</span><br /><span><span>&nbsp;&nbsp;</span>直感に反している</span><br /><span><span>&nbsp;</span>シャープが多ければ多いほど、文字が無限に大きくなるようにするのが正しい</span><br /><br /><br />まとめ<br /><span><span>&nbsp;</span>markdownのよさとは</span><br /><span><span>&nbsp;</span>0. テキスト表示とHTML表示がほぼ同じなので、どちらでも読める</span><br /><span><span>&nbsp;</span>1. リンクや打ち消し線等の文字装飾が色々おかしいので、頭を使う必要があって酒を飲んでいると不可能</span><br /><span><span>&nbsp;</span>2. リスト記法は便利だけど、「テキスト表示とHTML表示がほぼ同じ」ではなくなる事がある</span><br /><span><span>&nbsp;</span><span>3. </span><span>#</span><span>で</span><span>&lt;h1&gt;</span><span>や</span><span>&lt;h2&gt;</span><span>になる文書構造化がしたいと言いつつ、実はデカイ文字を書きたいだけ</span></span><br /><br /><br /><img src="ご意見ご感想"/><br /><span><span>&nbsp;</span><span>構造は</span><span><a href="https://scrapbox.io/shokai/TeX">TeX</a></span><span>に流用する</span></span><br /><span><span>&nbsp;&nbsp;</span><span>なんか大変そうという印象しかない </span><span>shokai.icon</span></span><br /><br /><span><span>&nbsp;</span><span>**</span><span>と</span><span>*</span><span>は強く強調と強調という意味で、italicやboldではない</span></span><br /><span><span>&nbsp;&nbsp;</span><span>どこのhelp見ても実際に</span><span><i>italic</i></span><span>や</span><span><strong>bold</strong></span><span>として説明されている </span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>Slackの場合</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>*あいうえお*</span><span> → boldになる</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://gyazo.com/4f619b3b8d85b70216967c91eb2345c8"><img src="https://gyazo.com/4f619b3b8d85b70216967c91eb2345c8/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>GitHubの場合</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>*あいうえお*</span><span> → Italicになる</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://gyazo.com/14c1603bcb1f753f8dc369b7cbc044d0"><img src="https://gyazo.com/14c1603bcb1f753f8dc369b7cbc044d0/raw"/></a></span><br /><br /><span><span>&nbsp;</span><a href="https://gyazo.com/7f626638b86b378d3a3ec87544a827ed"><img src="https://gyazo.com/7f626638b86b378d3a3ec87544a827ed/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span><span>他に利用方法があるなら教えて欲しい、ないなら構造化は必要なくてただ文字が大きくなってるだけでは？と一番上に書いてあるのだが、日本語苦手なのだろうか？ </span><span>shokai.icon</span></span><br /><br />]]></description>
        </item>
        <item>
            <title><![CDATA[Scrapboxに見出しの記法は存在しない - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/Scrapbox%E3%81%AB%E8%A6%8B%E5%87%BA%E3%81%97%E3%81%AE%E8%A8%98%E6%B3%95%E3%81%AF%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%AA%E3%81%84</link>
            <guid>https://scrapbox.io/shokai/Scrapbox%E3%81%AB%E8%A6%8B%E5%87%BA%E3%81%97%E3%81%AE%E8%A8%98%E6%B3%95%E3%81%AF%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%AA%E3%81%84</guid>
            <pubDate>Tue, 25 Jun 2019 10:08:45 GMT</pubDate>
            <description><![CDATA[<br /><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>に見出しの</span><span><a href="https://scrapbox.io/shokai/%E8%A8%98%E6%B3%95">記法</a></span><span>は存在しません</span><br /><span><span>&nbsp;</span><span>ページ内に</span><span><a href="https://scrapbox.io/shokai/%E8%A6%8B%E5%87%BA%E3%81%97">見出し</a></span><span>を作る事そのものを否定しているからです</span></span><br /><br />存在するのは「文字を大きくする記法」だけです<br /><span><span>&nbsp;</span>見出しを作るほど独立した項目なら</span><br /><span><span>&nbsp;&nbsp;</span>ページ内に構造化するのではなく</span><br /><span><span>&nbsp;&nbsp;</span>独立した別ページとして切り出す事を推奨しています</span><br /><span><span>&nbsp;</span>独立したページは、複数のページから参照され、関係性の説明のネットワークのHUBになれる可能性があります</span><br /><span><span>&nbsp;&nbsp;</span><span>see </span><span><a href="https://scrapbox.io/shokai/%E9%96%A2%E9%80%A3%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%AA%E3%82%B9%E3%83%88">関連ページリスト</a></span></span><br /><span><span>&nbsp;</span><span>独立できる程の情報量を1つのページ内構造に押し込んでしまうと、</span><span><a href="https://scrapbox.io/shokai/%E5%86%8D%E5%88%A9%E7%94%A8">再利用</a></span><span>性が下がり、将来的な機会損失になります</span></span><br /><br /><span>というメッセージを込めて最近</span><span><a href="https://scrapbox.io/help-jp/%E8%A8%98%E6%B3%95">/help-jp/記法</a></span><span>を</span><span><a href="https://scrapbox.io/help-jp/%E3%83%96%E3%83%A9%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0">/help-jp/ブラケティング</a></span><span>に書き直した</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[SEO - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/SEO</link>
            <guid>https://scrapbox.io/shokai/SEO</guid>
            <pubDate>Tue, 25 Jun 2019 02:40:58 GMT</pubDate>
            <description><![CDATA[<br /><span>だいたい</span><span><a href="https://scrapbox.io/shokai/SPAM">SPAM</a></span><span>の事</span><br />spam engine optimizationの略<br />]]></description>
        </item>
        <item>
            <title><![CDATA[We are remote #2 – リモートワークどうですか？ - connpass - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/We_are_remote_%232_%E2%80%93_%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%A9%E3%81%86%E3%81%A7%E3%81%99%E3%81%8B%EF%BC%9F_-_connpass</link>
            <guid>https://scrapbox.io/shokai/We_are_remote_%232_%E2%80%93_%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%A9%E3%81%86%E3%81%A7%E3%81%99%E3%81%8B%EF%BC%9F_-_connpass</guid>
            <pubDate>Mon, 24 Jun 2019 13:24:06 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://remote.connpass.com/event/121684/">We are remote #2 – リモートワークどうですか？ - connpass</a><br /><br /><span><a href="https://scrapbox.io/shokai/we_are_remote">we are remote</a></span><span>の2回目</span><br /><span><span>&nbsp;</span>日時</span><br /><span><span>&nbsp;&nbsp;</span>2019/03/06(水) 19:00 〜 21:30</span><br /><span><span>&nbsp;</span>場所</span><br /><span><span>&nbsp;&nbsp;</span><span>東京（</span><span><a href="https://scrapbox.io/shokai/%E3%82%B5%E3%82%A4%E3%83%9C%E3%82%A6%E3%82%BA">サイボウズ</a></span><span>）</span></span><br /><span><span>&nbsp;&nbsp;</span><span>京都（</span><span><a href="https://scrapbox.io/shokai/Nota_Inc.">Nota Inc.</a></span><span>）</span></span><br /><span><span>&nbsp;&nbsp;</span>リモート参加</span><br /><br />LT枠で申し込んだ<br /><span><span>&nbsp;</span>何話そう</span><br /><span><span>&nbsp;</span><span>前回の</span><span><a href="https://scrapbox.io/shokai/%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E6%B8%9B%E3%82%89%E3%81%9D%E3%81%86">コミュニケーションを減らそう</a></span><span>を踏まえて、実際どうなのかを話すか</span></span><br /><span><span>&nbsp;&nbsp;</span>2年ぐらい経ったし</span><br /><br />当日のスライド<br /><span><span>&nbsp;</span><a href="https://scrapbox.io/remote/%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%81%A7%E4%BF%A1%E9%A0%BC%E3%82%92%E3%81%A9%E3%81%86%E7%99%BA%E7%94%9F%E3%81%95%E3%81%9B%E3%82%8B%E3%81%8B_(shokai)">/remote/リモートで信頼をどう発生させるか (shokai)</a></span><br /><br />以下ネタ帳<br /><a href="https://scrapbox.io/shokai/%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%AE%E7%9F%A5%E8%A6%8B%E3%82%92%E8%A9%B1%E3%81%97%E3%81%A6%E3%81%8D%E3%81%9F">リモートワークについての知見を話してきた</a><br /><span><span>&nbsp;</span>最近リモートワークつらい、コミュニケーションをたくさんとって指示を明確にして、感情表現をしてしっかりマネジメントしよう！みたいな結論のblogをたくさん見た。</span><br /><span><span>&nbsp;</span>俺はそれ違うんじゃないのと、というか無理だし無駄だと思うのでそういう気持ちをスライドにした。</span><br /><span><span>&nbsp;</span></span><br /><span><span>&nbsp;</span>話した内容</span><br /><span><span>&nbsp;</span>コミュニケーションを厳密にやるのはそもそも人間には向いてないからエラーは0にならないし、その正確なコミュニケーションとやらの為に集中して1人で考え、作る時間が削られるのはおかしい。</span><br /><span><span>&nbsp;</span>それならビジョン・価値観・制約条件だけ共有した上でタスクを大きめに切ればいい。</span><br /><span><span>&nbsp;</span>当然、レビューの結果rejectはあるけど、間違いや手戻りを恐れずにそうやった方が学習効率もいい。</span><br /><span><span>&nbsp;</span></span><br /><span><span>&nbsp;</span>という話をした。</span><br /><span><span>&nbsp;</span>他にも社内には優先度や〆切の概念が無いとか、実際にそれをどうScrapbox上でやるかという話も書いてある。</span><br /><br /><a href="https://scrapbox.io/naronA/%E3%83%95%E3%83%AB%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF%EF%BC%9F">/naronA/フルリモートワークするには？</a><br /><span><span>&nbsp;</span><span>気をつけるべき点が完全にまとまっていると思う</span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>仕事に明確な線引きをすると、回らなくなってくる</span><br /><span><span>&nbsp;&nbsp;</span>会社にいるときより進捗が見えづらい</span><br /><span><span>&nbsp;&nbsp;</span>など</span><br /><br /><span><span>&nbsp;</span>しかし、まずコミュニケーション自体が重いという事実がある</span><br /><span><span>&nbsp;&nbsp;</span>そこでコミュニケーションを減らすために明確に役割を分けると「俺は担当じゃないから知らないよ」で何も進まなくなってしまう</span><br /><br /><span>感想</span><span>shokai.icon</span><br /><span><span>&nbsp;</span>全員が、多少は他人のフォローをする意識を持つ必要がある</span><br /><span><span>&nbsp;</span><span>すると</span><span><a href="https://scrapbox.io/shokai/job_description">job description</a></span><span>が曖昧になってくる</span></span><br /><span><span>&nbsp;</span><span>曖昧なまま、</span><span><a href="https://scrapbox.io/shokai/%E4%BF%A1%E7%94%A8">信用</a></span><span>・</span><span><a href="https://scrapbox.io/shokai/%E4%BF%A1%E9%A0%BC">信頼</a></span><span>の問題をどう解決していくか？</span></span><br /><br /><br /><a href="https://scrapbox.io/nishio/%E5%B0%82%E9%96%80%E5%AE%B6%E3%81%AF%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84">/nishio/専門家はマネジメントできない</a><br /><span><span>&nbsp;</span><span>これも重要な指摘ですね</span><span>shokai.icon</span></span><br /><br /><span><span>&nbsp;</span><span>これまでの組織では、部下の行うことは上司が知っていた。上司自身、数年前には部下と同じ仕事をしていた。しかし</span><span><a href="https://scrapbox.io/shokai/%E7%9F%A5%E8%AD%98%E7%B5%84%E7%B9%94">知識組織</a></span><span>では、上司は部下の仕事を知らないものとみなさなければならない。通常、上司は部下と同じ仕事を経験していない。</span></span><br /><br /><span><span>&nbsp;</span>部下が専門知識を扱うようになると、上司は部下の仕事を知らないのが前提となる</span><br /><br /><br />つまり<br /><span><span>&nbsp;</span>部下が専門知識を扱わない場合</span><br /><span><span>&nbsp;&nbsp;</span>管理を徹底する事でリモートワーク</span><br /><span><span>&nbsp;</span>部下が専門知識を扱う場合</span><br /><span><span>&nbsp;&nbsp;</span>管理を徹底してもマネジメントにはならない</span><br /><span><span>&nbsp;&nbsp;</span><span>しかし、</span><span><img src="信用・信頼を発生させる必要がある"/></span></span><br /><br /><br />学部生の頃の先生が言っていた<br /><span><span>&nbsp;</span>「アイディア考えて来いと言ったら100個ぐらい書き出してくるんだ」</span><br /><span><span>&nbsp;</span>頭のなかに持ってるだけじゃだめ、誰も何もリアクションできないから</span><br /><br /><br /><span>結局、上司から観測可能なアウトプットが無ければ</span><span><a href="https://scrapbox.io/shokai/%E4%BF%A1%E9%A0%BC">信頼</a></span><span>は発生しない</span><br /><br /><br />対策<br /><span><span>&nbsp;</span>毎日プルリクを3つ出す</span><br /><span><span>&nbsp;</span>これこそ信頼の源</span><br /><br />無理なので<br /><span><span>&nbsp;</span><span>気になっている事を何でも</span><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>に書いていく</span></span><br /><span><span>&nbsp;</span>「やっている感」が出る</span><br /><br /><span><a href="https://scrapbox.io/shokai/Safari">Safari</a></span><span>ぶっ壊れてるじゃねーかという話</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/6c65204d6632f2edf7015ae26ce75040"><img src="https://gyazo.com/6c65204d6632f2edf7015ae26ce75040/raw"/></a></span><br /><span><span>&nbsp;</span>こういうのは「ある機能を実装するのをやめる」という意思決定なので、Pull requestという形にはならない</span><br /><span><span>&nbsp;</span>しかしとても重要</span><br /><br />意見とか考察はどんどん書く<br /><span><span>&nbsp;</span>mobileのUIについて考察している所に乱入していく様子</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/3839cc211ec71c1970d01873cc50242a"><img src="https://gyazo.com/3839cc211ec71c1970d01873cc50242a/raw"/></a></span><br /><br /><span>自分なりの</span><span><a href="https://scrapbox.io/shokai/%E7%8A%B6%E6%B3%81%E5%88%86%E6%9E%90">状況分析</a></span><span>と、今後の目標とかも書く</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/58f6ab81636efa10b979589f94f7f708"><img src="https://gyazo.com/58f6ab81636efa10b979589f94f7f708/raw"/></a></span><br /><span><span>&nbsp;</span>ページ下の方に「なるほど」とか感想が書かれている</span><br /><span><span>&nbsp;</span>一見バラバラな調査ページの群れに、方向性を与え、価値を定義する重要な活動</span><br /><span><span>&nbsp;&nbsp;</span><span>いわゆる</span><span><a href="https://scrapbox.io/shokai/%E7%A0%94%E7%A9%B6%E8%A8%88%E7%94%BB%E6%9B%B8">研究計画書</a></span><span>と同じ役割</span></span><br /><br /><br />まとめ<br /><span><span>&nbsp;</span>Pull requestにならない単位の重要な活動がある</span><br /><span><span>&nbsp;</span>そんな簡単にコードが書けてたまるか</span><br /><span><span>&nbsp;</span><span>調査や考察が他人に見える状態で共有していく、それが</span><span><a href="https://scrapbox.io/shokai/%E4%BF%A1%E9%A0%BC">信頼</a></span><span>の源になるのではないか？</span></span><br /><br />これで明日解雇されていたりすると最高に面白くはある<br />]]></description>
        </item>
        <item>
            <title><![CDATA[ページの1部分を別のページに切り出すUserScript - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE1%E9%83%A8%E5%88%86%E3%82%92%E5%88%A5%E3%81%AE%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AB%E5%88%87%E3%82%8A%E5%87%BA%E3%81%99UserScript</link>
            <guid>https://scrapbox.io/shokai/%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE1%E9%83%A8%E5%88%86%E3%82%92%E5%88%A5%E3%81%AE%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AB%E5%88%87%E3%82%8A%E5%87%BA%E3%81%99UserScript</guid>
            <pubDate>Tue, 18 Jun 2019 07:30:12 GMT</pubDate>
            <description><![CDATA[<br /><span>これ便利なので本体に取り込んだ</span><span>shokai.icon</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE1%E9%83%A8%E5%88%86%E3%82%92%E5%88%A5%E3%81%AE%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AB%E5%88%87%E3%82%8A%E5%87%BA%E3%81%99UserScript%E3%82%92%E6%9C%AC%E4%BD%93%E3%81%AB%E5%8F%96%E3%82%8A%E8%BE%BC%E3%82%93%E3%81%A0">ページの1部分を別のページに切り出すUserScriptを本体に取り込んだ</a></span><br /><br /><span>ページの中に長い文章があって、これ別ページに切り出した方が良いよなと思う事がある</span><span>shokai.icon</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%AF%84%E5%9B%B2%E9%81%B8%E6%8A%9E">範囲選択</a></span><span>して、別ページを作りたい</span></span><br /><span><span>&nbsp;</span>切り出したページは元のページとリンクさせる</span><br /><br />様子<br /><span><span>&nbsp;</span><span>範囲選択で出る</span><span><a href="https://scrapbox.io/shokai/Popup_Menu">Popup Menu</a></span><span>に</span><span>NewPage</span><span>ボタンを追加した</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/8ab09073ef1ef5b503eaab84ff2943a4"><img src="https://gyazo.com/8ab09073ef1ef5b503eaab84ff2943a4/raw"/></a></span><br /><br /><br /><span>試しに</span><span><a href="https://scrapbox.io/shokai/UserScript">UserScript</a></span><span>を書いてみたy</span><br /><br /><span><span>&nbsp;</span><span>最新のChromeやSafariだと、</span><span><a href="https://scrapbox.io/shokai/%E8%87%AA%E5%88%86%E3%81%AE%E3%83%9A%E3%83%BC%E3%82%B8">自分のページ</a></span><span>の</span><span>code:script.js</span><span>に</span></span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/ページの1部分を別のページに切り出すUserScript/script.js&#x27;</span><br /><span><span>&nbsp;&nbsp;</span>を書くだけで使える</span><br /><br /><span><span>&nbsp;</span><span>以下を自分のページの</span><span>code:script.js</span><span>にコピペしてもよい</span></span><br /><span><span>&nbsp;&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>scrapbox.PopupMenu.addButton({</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>title: &#x27;NewPage&#x27;,</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>onClick: text =&gt; {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>const lines = text.split(/</span><span><a href="https://scrapbox.io/shokai/%5Cr%5Cn">\r\n</a></span><span>/g)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>const title = lines</span><span><a href="https://scrapbox.io/shokai/0">0</a></span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>.trim()</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>.replace(/\</span><span><img src="^\"/></span><span>+.icon\]/gm, &#x27;&#x27;)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>.replace(/[\</span><span><a href="https://scrapbox.io/shokai/%5C">\</a></span><span>]/g, &#x27;&#x27;)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const projectRoot = (() =&gt; {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const tmp = location.href.split(&#x27;/&#x27;)</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>tmp.pop()</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return tmp.join(&#x27;/&#x27;)</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>})()</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const currentPageTitle = decodeURIComponent(location.href.split(/\//g).pop())</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>lines.unshift(</span><span>from [${currentPageTitle}]</span><span>)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const body = encodeURIComponent(lines.join(&#x27;\n&#x27;))</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>window.open(</span><span>${projectRoot}/${title}?body=${body}</span><span>)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return </span><span>[${title}]</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>}</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>})</span><br /><br /><br />便利すぎて2時間ぐらい気絶してた<br />]]></description>
        </item>
        <item>
            <title><![CDATA[HashTagがあると分類して整理整頓したくなってしまう - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/HashTag%E3%81%8C%E3%81%82%E3%82%8B%E3%81%A8%E5%88%86%E9%A1%9E%E3%81%97%E3%81%A6%E6%95%B4%E7%90%86%E6%95%B4%E9%A0%93%E3%81%97%E3%81%9F%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86</link>
            <guid>https://scrapbox.io/shokai/HashTag%E3%81%8C%E3%81%82%E3%82%8B%E3%81%A8%E5%88%86%E9%A1%9E%E3%81%97%E3%81%A6%E6%95%B4%E7%90%86%E6%95%B4%E9%A0%93%E3%81%97%E3%81%9F%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86</guid>
            <pubDate>Mon, 10 Jun 2019 03:47:08 GMT</pubDate>
            <description><![CDATA[<br /><span>Scrapboxの</span><span><a href="https://scrapbox.io/shokai/HashTag">HashTag</a></span><span>は、あんまり良くない機能だと思う</span><span>shokai.icon</span><br /><br /><span>HashTagがあると</span><span><a href="https://scrapbox.io/shokai/%E5%88%86%E9%A1%9E">分類</a></span><span>して</span><span><a href="https://scrapbox.io/shokai/%E6%95%B4%E7%90%86%E6%95%B4%E9%A0%93">整理整頓</a></span><span>したくなってしまう</span><br /><span><span>&nbsp;</span><span>scrapboxをページリンクによる</span><span><a href="https://scrapbox.io/shokai/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF">ネットワーク</a></span><span>として使うのを妨げるので良くない</span></span><br /><span><span>&nbsp;</span>具体的には、やたらと同じタグを多くのページに付けたくなる</span><br /><span><span>&nbsp;&nbsp;</span><span>#tech</span><span>とか</span></span><br /><span><span>&nbsp;&nbsp;</span>すると、本来それほど関係がないページ同士が関係しあっている事になってしまう</span><br /><br /><a href="https://scrapbox.io/shokai/%E3%83%8F%E3%83%B3%E3%83%9E%E3%83%BC%E3%82%92%E6%8C%81%E3%81%A4%E4%BA%BA%E3%81%AB%E3%81%AF%E5%85%A8%E3%81%A6%E3%81%8C%E9%87%98%E3%81%AB%E8%A6%8B%E3%81%88%E3%82%8B">ハンマーを持つ人には全てが釘に見える</a><br /><span><span>&nbsp;</span>普通はhashtagしか知らない</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/masui/%E3%83%AA%E3%83%B3%E3%82%AF%E6%83%85%E5%A0%B1%E3%81%AE%E6%B4%BB%E7%94%A8">/masui/リンク情報の活用</a></span><span>を知らない</span></span><br /><span><span>&nbsp;</span>まあ当然だ</span><br /><span><span>&nbsp;&nbsp;</span>初めて見たアプリケーションの中に見覚えのある機能を見つけたら</span><br /><span><span>&nbsp;&nbsp;</span>その機能だけで全てを解決しようとしてしまう</span><br /><br />では、どう書くべきなのか？<br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/HashTag%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8F%E6%96%87%E4%B8%AD%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E4%BD%BF%E3%81%86">HashTagではなく文中リンクを使う</a></span><br /><span><span>&nbsp;</span><a href="https://rashita.net/blog/?p=24530">Scrapboxをリンクベースで記述する – R-style</a></span><br /><span><span>&nbsp;</span><span>これです</span><span>shokai.icon</span></span><br /><span><span>&nbsp;</span><span>このproject(</span><span><a href="https://scrapbox.io/shokai/">/shokai</a></span><span>)もそうだけど、tagではなくリンクでネットワーク構造を作っている</span></span><br /><br />Scrapboxはリンクやhashtagの有無だけを見て推薦を行っている<br /><span><span>&nbsp;</span>強弱は見ていない</span><br /><span><span>&nbsp;</span>強弱の宣言ができるまともなUIはこの世に存在しないから</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[かぼちゃカレー - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E3%81%8B%E3%81%BC%E3%81%A1%E3%82%83%E3%82%AB%E3%83%AC%E3%83%BC</link>
            <guid>https://scrapbox.io/shokai/%E3%81%8B%E3%81%BC%E3%81%A1%E3%82%83%E3%82%AB%E3%83%AC%E3%83%BC</guid>
            <pubDate>Wed, 05 Jun 2019 14:10:18 GMT</pubDate>
            <description><![CDATA[<span>よく作る茶色い</span><span><a href="https://scrapbox.io/shokai/%E3%82%AB%E3%83%AC%E3%83%BC">カレー</a></span><span>の</span><span><a href="https://scrapbox.io/shokai/%E3%83%AC%E3%82%B7%E3%83%94">レシピ</a></span><br /><span><span>&nbsp;</span>多分、かぼちゃセロリトマト以外は適当で良いと思う</span><br /><span><span>&nbsp;</span>ここ5年ぐらい、どこでカレー食べても「俺の作った奴の方がうまい」としか感じない</span><br /><br />材料<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%82%BB%E3%83%AD%E3%83%AA">セロリ</a></span><span> 1本</span></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%81%8B%E3%81%BC%E3%81%A1%E3%82%83">かぼちゃ</a></span><span> 1/4か1/6ぐらい</span></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E4%BA%BA%E5%8F%82">人参</a></span><span> 1本</span></span><br /><span><span>&nbsp;</span>玉ねぎ 1玉</span><br /><span><span>&nbsp;</span>じゃがいも 3,4個</span><br /><span><span>&nbsp;</span>ズッキーニ 1本</span><br /><span><span>&nbsp;</span>エリンギ 1,2本 薄切り</span><br /><span><span>&nbsp;</span>トマト缶 1</span><br /><span><span>&nbsp;</span>しめじ 1/2袋</span><br /><span><span>&nbsp;</span>豚バラ肉 200〜300g</span><br /><span><span>&nbsp;&nbsp;</span>薄切りのやつ</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%86%9F%E3%82%AB%E3%83%AC%E3%83%BC">熟カレー</a></span><span>辛口 1箱</span></span><br /><span><span>&nbsp;</span>ローリエの葉 2,3枚</span><br />手順<br /><span><span>&nbsp;</span>野菜とトマト缶と水を鍋に入れて、煮る</span><br /><span><span>&nbsp;&nbsp;</span>沸騰させてから中火で30分ぐらい</span><br /><span><span>&nbsp;</span>カレー、ローリエの葉入れる</span><br /><span><span>&nbsp;&nbsp;</span>さらに弱火でしばらく煮る</span><br /><span><span>&nbsp;</span>火を最弱にしてから肉を入れる</span><br /><span><span>&nbsp;</span>完成</span><br />ポイント<br /><span><span>&nbsp;</span>混ぜると焦げる</span><br /><span><span>&nbsp;&nbsp;</span>混ぜると芋やかぼちゃが砕けて、粉が底にたまる</span><br /><span><span>&nbsp;&nbsp;</span>これが焦げる</span><br /><span><span>&nbsp;</span>野菜を炒めない</span><br /><span><span>&nbsp;&nbsp;</span>油が無いのであっさりする</span><br /><span><span>&nbsp;</span>肉は柔らかい方が好きなので最後に入れる</span><br /><span><span>&nbsp;</span>カレーのルーは加熱しなくても溶けるし、味も馴染む</span><br /><br />]]></description>
        </item>
        <item>
            <title><![CDATA[shokai - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/shokai</link>
            <guid>https://scrapbox.io/shokai/shokai</guid>
            <pubDate>Tue, 04 Jun 2019 04:47:28 GMT</pubDate>
            <description><![CDATA[<br /><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>を開発しています </span><span>shokai.icon*6</span><br /><br /><a href="https://gyazo.com/69c4e93d637830b3a64dd5493c43d4e2"><img src="https://gyazo.com/69c4e93d637830b3a64dd5493c43d4e2/raw"/></a><br /><a href="https://gyazo.com/56794c6bda352cbb974664b6e72a7cfc"><img src="https://gyazo.com/56794c6bda352cbb974664b6e72a7cfc/raw"/></a><br /><a href="https://gyazo.com/0a0580c04f5fb6dcfd81f82127f0d538"><img src="https://gyazo.com/0a0580c04f5fb6dcfd81f82127f0d538/raw"/></a><br /><br /><span><span>&nbsp;</span>橋本翔</span><br /><span><span>&nbsp;</span><a href="http://shokai.org">http://shokai.org</a></span><br /><span><span>&nbsp;</span><a href="https://github.com/shokai">https://github.com/shokai</a></span><br /><span><span>&nbsp;</span><a href="https://twitter.com/shokai">https://twitter.com/shokai</a></span><br /><span><span>&nbsp;</span>070-4120-6357</span><br /><span><span>&nbsp;</span>SW-0404-5900-0238</span><br /><br /><a href="https://scrapbox.io/shokai/%E4%BA%BA%E7%89%A9">#人物</a><br /><br /><strong><span>ここから</span><span><a href="https://scrapbox.io/shokai/UserScript">UserScript</a></span></strong><br /><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>console.log(&#x27;initialize user script&#x27;);</span><br /><a href="https://scrapbox.io/shokai/%E9%9F%B3%E5%A3%B0%E5%85%A5%E5%8A%9BMenu">音声入力Menu</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/音声入力Menu/script.js&#x27;</span><br /><br /><br /><a href="https://scrapbox.io/shokai/%E9%81%B8%E6%8A%9E%E7%AF%84%E5%9B%B2%E3%82%92tweet%E3%81%99%E3%82%8BUserScript">選択範囲をtweetするUserScript</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/選択範囲をtweetするUserScript/script.js&#x27;</span><br /><br /><a href="https://scrapbox.io/shokai/%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB%E3%81%A7Google%E7%94%BB%E5%83%8F%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8BUserScript">ページタイトルでGoogle画像検索するUserScript</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/ページタイトルでGoogle画像検索するUserScript/script.js&#x27;</span><br /><br /><a href="https://scrapbox.io/shokai/%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E8%A6%8B%E5%87%BA%E3%81%97%E3%82%92%E4%BD%9C%E3%82%8BUserScript">ページの見出しを作るUserScript</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/ページの見出しを作るUserScript/script.js&#x27;</span><br /><br /><a href="https://scrapbox.io/shokai/%E6%96%87%E5%AD%97%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88">文字カウント</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/文字カウント/page.js&#x27;</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/文字カウント/popup.js&#x27;</span><br /><br /><a href="https://scrapbox.io/shokai/Tweet_Menu">Tweet Menu</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/Tweet_Menu/script.js&#x27;</span><br /><br /><a href="https://scrapbox.io/shokai/%E3%81%8A%E3%81%BF%E3%81%8F%E3%81%98Menu">おみくじMenu</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/おみくじMenu/script.js&#x27;</span><br /><br /><br /><a href="https://scrapbox.io/shokai/%E8%A1%8C%E9%A0%AD%E3%81%AB%E5%BC%95%E7%94%A8%E7%AC%A6%E3%82%92%E4%BB%98%E3%81%91%E3%82%8BUserScript">行頭に引用符を付けるUserScript</a><br /><span><span>&nbsp;</span>code:script.js</span><br /><span><span>&nbsp;&nbsp;</span>import &#x27;/api/code/shokai/行頭に引用符を付けるUserScript/script.js&#x27;</span><br /><br /><span>daiiz.icon</span><span> script</span><br /><span><span>&nbsp;</span>code:___script.js</span><br /><span><span>&nbsp;&nbsp;</span>$(&#x27;body&#x27;).attr(&#x27;data-daiiz-rel-bubble&#x27;, &#x27;off&#x27;);  // 関連ページを吹き出し表示する</span><br /><span><span>&nbsp;&nbsp;</span>$(&#x27;body&#x27;).attr(&#x27;data-daiiz-text-bubble&#x27;, &#x27;on&#x27;);  // リンク先ページのテキストを表示する</span><br /><br /><br />]]></description>
        </item>
        <item>
            <title><![CDATA[ServiceWorkerとCacheによるSPAの高速化、オフラインモード - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/ServiceWorker%E3%81%A8Cache%E3%81%AB%E3%82%88%E3%82%8BSPA%E3%81%AE%E9%AB%98%E9%80%9F%E5%8C%96%E3%80%81%E3%82%AA%E3%83%95%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%A2%E3%83%BC%E3%83%89</link>
            <guid>https://scrapbox.io/shokai/ServiceWorker%E3%81%A8Cache%E3%81%AB%E3%82%88%E3%82%8BSPA%E3%81%AE%E9%AB%98%E9%80%9F%E5%8C%96%E3%80%81%E3%82%AA%E3%83%95%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%A2%E3%83%BC%E3%83%89</guid>
            <pubDate>Mon, 03 Jun 2019 06:31:22 GMT</pubDate>
            <description><![CDATA[<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>の中で、</span><span><a href="https://scrapbox.io/shokai/ServiceWorker">ServiceWorker</a></span><span>を使って何やってるか解説する</span></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/FGN%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2Meetup_vol.1">FGNエンジニアMeetup vol.1</a></span><span>の</span><span><a href="https://scrapbox.io/shokai/%E7%99%BA%E8%A1%A8%E8%B3%87%E6%96%99">発表資料</a></span></span><br /><br /><br />こんにちは<br /><span><span>&nbsp;</span><span>shokaiです</span><span>shokai.icon</span></span><br /><span><span>&nbsp;</span>Scrapboxを作っています</span><br /><span><span>&nbsp;</span>横浜の自宅から京都にリモートワークしている</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%A6%8F%E5%B2%A1">福岡</a></span><span>のほうが京都より安いし近い✈️</span></span><br /><br /><br />詳細な実装の話<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/daiiz/ServiceWorker%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%B3%E3%82%B0%E6%88%A6%E7%95%A5_~Wiki%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E4%BE%8B%E3%81%AB~">/daiiz/ServiceWorkerを用いたキャッシング戦略 ~Wikiアプリケーションを例に~</a></span><span> by </span><span>daiiz.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>半年ぐらい前の資料</span><br /><span><span>&nbsp;</span><span>これをアップデートしつつ、もう一度噛み砕いて説明したい</span><span>shokai.icon</span></span><br /><br /><span><span>&nbsp;</span><span>普通の</span><span><a href="https://scrapbox.io/shokai/SPA">SPA</a></span><span>を高速化したり、オフライン対応したりする事を考える</span></span><br /><span><span>&nbsp;</span>どこから手を付けるべきか？</span><br /><br /><br />デモ内容<br /><span><span>&nbsp;</span>起動がはやい</span><br /><span><span>&nbsp;</span>Desktop PWA</span><br /><span><span>&nbsp;</span>画面遷移がはやい</span><br /><span><span>&nbsp;</span>エディタにいろいろ書ける</span><br /><span><span>&nbsp;</span>オフラインモード</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/7622d63ce35541453a74a7a53c2196d3"><img src="https://gyazo.com/7622d63ce35541453a74a7a53c2196d3/raw"/></a></span><br /><br /><br /><span>普通の</span><span><a href="https://scrapbox.io/shokai/SPA">SPA</a></span><span>の動作</span><br /><span><span>&nbsp;</span>0. ブラウザでページ開くと</span><br /><span><span>&nbsp;</span>1. HTML, JS, CSSなどのassetsをダウンロードして</span><br /><span><span>&nbsp;</span>2. AjaxでAPIからデータをダウンロードして</span><br /><span><span>&nbsp;</span>3. 画面が表示される</span><br /><br />よくある高速化<br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%B5%E3%82%A4%E3%83%89%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0">サーバーサイドレンダリング</a></span><br /><span><span>&nbsp;&nbsp;</span><span>3. 画面が表示される</span><span>まで終わったHTMLをいきなり返せば、最初の表示が速くなる</span></span><br /><span><span>&nbsp;&nbsp;</span>その後で、ブラウザ上でも1,2,3を実行したりする技もある</span><br /><span><span>&nbsp;</span>CDN</span><br /><span><span>&nbsp;&nbsp;</span>1と2のダウンロードが速くなる</span><br /><span><span>&nbsp;</span>どちらも通信を効率化する</span><br /><br /><span><span>&nbsp;</span><span>これらは</span><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>では全くやっていない</span></span><br /><span><span>&nbsp;&nbsp;</span><span>サーバーはアメリカの</span><span><a href="https://scrapbox.io/shokai/Heroku">Heroku</a></span><span>にある</span></span><br /><span><span>&nbsp;&nbsp;</span>往復200 msecぐらいかかるが、問題ない</span><br /><br /><span><a href="https://scrapbox.io/shokai/ServiceWorker">ServiceWorker</a></span><span>で高速化</span><br /><span><span>&nbsp;</span>0. ブラウザでページ開くと</span><br /><span><span>&nbsp;</span><span>1. HTML, JS, CSSなどを</span><span><a href="https://scrapbox.io/shokai/CacheStorage">CacheStorage</a></span><span>から表示</span></span><br /><span><span>&nbsp;</span>2. 前回取得したAPIデータをCacheStorageから表示</span><br /><span><span>&nbsp;</span>3. 画面が表示される</span><br /><span><span>&nbsp;&nbsp;</span>この時点で操作可能になる</span><br /><span><span>&nbsp;</span>4. AjaxでAPIからデータをダウンロードして</span><br /><span><span>&nbsp;</span>5. 画面がさらに更新される</span><br /><br /><span><span>&nbsp;</span>1, 2, 3まで一切通信をせずブラウザ内のキャッシュでやる</span><br /><span><span>&nbsp;</span>通信するのは4だけ</span><br /><span><span>&nbsp;</span>通信速度を効率化するのではなく、タイミングや順序を入れ替えた</span><br /><br /><br /><strong>基本の話</strong><br /><br /><span><a href="https://scrapbox.io/shokai/ServiceWorker">ServiceWorker</a></span><span>とは？</span><br /><span><span>&nbsp;</span>プログラマブルなネットワークproxy</span><br /><span><span>&nbsp;&nbsp;</span>HTTP通信を途中で書き換え可能</span><br /><span><span>&nbsp;</span>オフライン表示の為の機能ではない</span><br /><span><span>&nbsp;&nbsp;</span>レスポンスをcacheしてあれば、オフライン表示も実装できるよね（自力でがんばれ）という世界観</span><br /><span><span>&nbsp;</span>何でもできる</span><br /><span><span>&nbsp;&nbsp;</span>通信を握りつぶしたり</span><br /><span><span>&nbsp;&nbsp;</span>送信先を書き換えたり</span><br /><span><span>&nbsp;&nbsp;</span>リクエストしたフリをしてリクエストせず、適当なレスポンスを返したり</span><br /><br />回線切ってChrome起動すると見える<br /><span><span>&nbsp;</span><a href="https://gyazo.com/438ef8eb64c22ae94b1885b1b9d8fafd"><img src="https://gyazo.com/438ef8eb64c22ae94b1885b1b9d8fafd/raw"/></a></span><br /><span><span>&nbsp;</span>Chromeのホーム画面はServiceWorkerで実装されてるから、オフラインでも表示できる</span><br /><span><span>&nbsp;</span>workerのソースも見れるぞ</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://www.google.co.jp/_/chrome/newtab-serviceworker.js">https://www.google.co.jp/_/chrome/newtab-serviceworker.js</a></span><br /><br /><span><a href="https://scrapbox.io/shokai/CacheStorage">CacheStorage</a></span><span>とは？</span><br /><span><span>&nbsp;</span>KVSです</span><br /><span><span>&nbsp;&nbsp;</span>key		Request object</span><br /><span><span>&nbsp;&nbsp;</span>value 	Response object</span><br /><span><span>&nbsp;&nbsp;</span>最近のブラウザに組み込まれている型</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://gyazo.com/8a41adb085f83eea29f03a8d90513738"><img src="https://gyazo.com/8a41adb085f83eea29f03a8d90513738/raw"/></a></span><br /><span><span>&nbsp;</span>UIスレッドとServiceWorkerの両方からアクセスできる</span><br /><span><span>&nbsp;</span><span>const response = await caches.match(request)</span><span>で取り出せる</span></span><br /><br />ServiceWorkerのインストール<br /><span><span>&nbsp;</span>ここは特に工夫の余地無いので飛ばす</span><br /><span><span>&nbsp;</span><span>navigator.serviceWorker.register</span><span>でググれ</span></span><br /><span><span>&nbsp;</span>一度インストールすれば、約24時間毎に更新チェックされる</span><br /><span><span>&nbsp;&nbsp;</span>ブラウザが自動的にやってくれる</span><br /><br />HTTP通信がServiceWorkerを通る<br /><span><span>&nbsp;</span>1. リクエスト</span><br /><span><span>&nbsp;&nbsp;</span>UIスレッド → ServiceWorker → サーバー</span><br /><span><span>&nbsp;</span>2. レスポンス</span><br /><span><span>&nbsp;&nbsp;</span>UIスレッド ← ServiceWorker ← サーバー</span><br /><span><span>&nbsp;</span>どちらもServiceWorkerを通る</span><br /><br />Fetchイベント<br /><span><span>&nbsp;</span>code:serviceworker.js</span><br /><span><span>&nbsp;&nbsp;</span>self.addEventListener(&#x27;fetch&#x27;, event =&gt; {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>event.respondWith((async () =&gt; {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const response = await fetch(event.request)</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return response</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>})())</span><br /><span><span>&nbsp;&nbsp;</span>})</span><br /><span><span>&nbsp;</span>1. fetchというイベントが来る</span><br /><span><span>&nbsp;</span><span>2. 関数の方の</span><span>fetch(request)</span><span>でサーバーから取得して</span></span><br /><span><span>&nbsp;</span>3. UIスレッドに返す</span><br /><span><span>&nbsp;</span>これを自由に拡張して</span><br /><span><span>&nbsp;&nbsp;</span><span>例えば</span><span>fetch(request)</span><span>が失敗したらcacheを返す様にすれば、オフラインモード完成</span></span><br /><br /><a href="https://scrapbox.io/shokai/Prefetch">Prefetch</a><br /><span><span>&nbsp;</span><span>ServiceWorkerとUIスレッドの間は、</span><span><a href="https://scrapbox.io/shokai/postMessage">postMessage</a></span><span>でもやりとりできる</span></span><br /><span><span>&nbsp;</span>リンクにマウスホバーで「cache温めといて」</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/86faa398b233f86be3ad4a15cd2e777e"><img src="https://gyazo.com/86faa398b233f86be3ad4a15cd2e777e/raw"/></a></span><br /><span><span>&nbsp;</span>クリックする前にデータ取得して光速を超える</span><br /><span><span>&nbsp;</span><span>詳しくは</span><span><a href="https://scrapbox.io/shokai/ServiceWorker%E3%82%92production%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%8B%E8%A9%B1">ServiceWorkerをproductionで使ってる話</a></span></span><br /><br /><br /><br /><strong>話を戻す</strong><br /><br />ServiceWorkerを使った高速化<br /><span><span>&nbsp;</span>0. ブラウザでページ開くと</span><br /><span><span>&nbsp;</span><span>1. HTML/JS/CSSを</span><span><a href="https://scrapbox.io/shokai/CacheStorage">CacheStorage</a></span><span>から表示</span></span><br /><span><span>&nbsp;</span>2. 前回取得したAPIデータをCacheStorageから表示</span><br /><span><span>&nbsp;</span>3. 画面が表示される</span><br /><span><span>&nbsp;</span>4. AjaxでAPIからデータをダウンロードして</span><br /><span><span>&nbsp;</span>5. 画面がさらに更新される</span><br /><br /><span><span>&nbsp;</span>順に見ていく</span><br /><br /><br /><span>1. HTML, JS, CSSなどを</span><span><a href="https://scrapbox.io/shokai/CacheStorage">CacheStorage</a></span><span>から表示</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/assets_cache">assets cache</a></span><span>という仕組みを実装した</span></span><br /><span><span>&nbsp;&nbsp;</span>バックグラウンドでHTML, JS, CSSを取得しておく</span><br /><span><span>&nbsp;</span>取得タイミング</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerが自動更新した後</span><br /><span><span>&nbsp;&nbsp;</span>しばらくUIスレッドが通信していない時</span><br /><span><span>&nbsp;</span>日時をkeyにしたCacheStorageに保存してある</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/550a81a0c38c5da5652dd119a2ab348f"><img src="https://gyazo.com/550a81a0c38c5da5652dd119a2ab348f/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>新しいのを取得したら古いのを削除</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/assets/assets.json">https://scrapbox.io/assets/assets.json</a></span><br /><span><span>&nbsp;&nbsp;</span>取得するassetのリスト</span><br /><br /><span><span>&nbsp;</span><span>このServiceWorkerの振る舞いを</span><span><a href="https://scrapbox.io/shokai/cache_first">cache first</a></span><span>と呼んでいる</span></span><br /><span><span>&nbsp;&nbsp;</span>まずcacheから返す</span><br /><span><span>&nbsp;&nbsp;</span>cacheに無ければ、networkから取得して返す</span><br /><br />2. 前回取得したAPIデータをCacheStorageから表示<br /><span><span>&nbsp;</span>ブラウザ側のstateを復元する</span><br /><span><span>&nbsp;</span>この工程にServiceWorkerは関わらない</span><br /><span><span>&nbsp;&nbsp;</span>CacheStorageはUIスレッドからも直接読み書きできるので</span><br /><span><span>&nbsp;</span><span>stateに</span><span>readyState = RESTORE_CACHE</span><span>をセットしておく</span></span><br /><span><span>&nbsp;&nbsp;</span>後で使う</span><br /><br /><span><span>&nbsp;</span>エディタの中身はまだこの工程を実装していない</span><br /><span><span>&nbsp;&nbsp;</span>古いページを編集したらややこしくなるので</span><br /><br />3. 画面が表示される<br /><span><span>&nbsp;</span>stateに基づき、Reactを普通にレンダリングするのだが</span><br /><span><span>&nbsp;</span>UIによっては「あくまでCacheから表示していますよ」と教えた方が良い物もある</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/43d6a2919ef4c0b1dcebc8ca46fab0cb"><img src="https://gyazo.com/43d6a2919ef4c0b1dcebc8ca46fab0cb/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>最新データの取得＆準備にちょっと時間がかかる為</span><br /><br />4. AjaxでAPIからデータをダウンロードして<br /><span><span>&nbsp;</span><span>ServiceWorkerは、普通にfetchイベント受けて</span><span>fetch(request)</span><span>してresponseをUIスレッドに返す</span></span><br /><span><span>&nbsp;</span>だけでなく</span><br /><span><span>&nbsp;&nbsp;</span>fetchの失敗をtry-catchして</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>Cache Storageから返す</span><br /><span><span>&nbsp;&nbsp;</span>responseをCacheStorageに保存しておく</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>日付を付けて、古いのは消す</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>外部originの画像もimageに保存</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><a href="https://gyazo.com/1c581ffc204f3c71bbbe63e3c40c4284"><img src="https://gyazo.com/1c581ffc204f3c71bbbe63e3c40c4284/raw"/></a></span><br /><span><span>&nbsp;</span><span>これを</span><span><a href="https://scrapbox.io/shokai/network_first">network first</a></span><span> (cache second)と呼んでいる</span></span><br /><span><span>&nbsp;&nbsp;</span>まずnetworkから返そうとする</span><br /><span><span>&nbsp;&nbsp;</span>失敗したらcacheから返す</span><br /><span><span>&nbsp;</span><span>stateに</span><span>readyState = FROM_REMOTE</span><span>もしくは</span><span>FALLBACK_CACHE</span><span>をセットしておく</span></span><br /><span><span>&nbsp;&nbsp;</span>後で使う</span><br /><br />5. 画面がさらに更新される<br /><span><span>&nbsp;</span>もう一度Reactのレンダリングを行う</span><br /><span><span>&nbsp;</span><span>readyState = FROM_REMOTE</span><span>の時</span></span><br /><span><span>&nbsp;&nbsp;</span>普通に表示する</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerがインストールされてない場合と同じ</span><br /><span><span>&nbsp;</span><span>readyState = FALLBACK_CACHE</span><span>の時</span></span><br /><span><span>&nbsp;&nbsp;</span><span>右下に</span><span><a href="https://gyazo.com/d00b202f9ae63fec45d2b45daf1bdac2"><img src="https://gyazo.com/d00b202f9ae63fec45d2b45daf1bdac2/raw"/></a></span><span>を表示しつつ</span></span><br /><span><span>&nbsp;&nbsp;</span>編集系の操作をロックし、閲覧専用にする</span><br /><span><span>&nbsp;&nbsp;</span><span>これで</span><span><a href="https://scrapbox.io/shokai/Offline_mode">Offline mode</a></span><span>ができた</span><span>shokai.icon*5</span></span><br /><br />Offline mode<br /><span><span>&nbsp;</span>Wikiなので編集が行われる</span><br /><span><span>&nbsp;</span>編集した後のデータでCacheStorageを更新したい</span><br /><span><span>&nbsp;</span><span>色々考えたけど「今見てるページをたまにGETする」が一番簡単だった</span><span>shokai.icon</span></span><br /><br /><br /><br /><strong>まとめ</strong><br /><span><span>&nbsp;</span>起動はやい＆オフライン表示</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorker</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>assetsを</span><span><a href="https://scrapbox.io/shokai/cache_first">cache first</a></span><span>で返す</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>APIリクエストを</span><span><a href="https://scrapbox.io/shokai/network_first">network first</a></span><span>で処理する</span></span><br /><span><span>&nbsp;&nbsp;</span>UIスレッド</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>stateをまずcacheから復元する</span><br /><span><span>&nbsp;&nbsp;</span>これら3つのstateをユーザーに適切に教える</span><br /><span><span>&nbsp;</span>画面遷移はやい</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/prefetch">prefetch</a></span><br /><br />Scrapboxではこの順で導入した<br /><span><span>&nbsp;</span><span>1. </span><span><a href="https://scrapbox.io/shokai/assets_cache">assets cache</a></span><span>実装して</span></span><br /><span><span>&nbsp;</span>2. prefetch</span><br /><span><span>&nbsp;</span>3. APIレスポンス全部cacheする</span><br /><span><span>&nbsp;</span>4. オフライン表示</span><br /><span><span>&nbsp;</span>5. cacheから復元して起動速度アップ</span><br /><span><span>&nbsp;</span>6. ページ編集後にcache更新</span><br /><br />既存のSPAを高速化するなら、どこからやる？<br /><span><span>&nbsp;</span><span>prefetchだと思う</span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>効果がわかりやすい。画面遷移はしょっちゅうある</span><br /><span><span>&nbsp;&nbsp;</span>実装が一番簡単</span><br /><span><span>&nbsp;</span>起動はやい＆オフライン表示　は</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/assets_cache">assets cache</a></span><span>がまず必要</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>実装がちょっとめんどくさい</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>めんどくさい割に感動が薄い（起動した時しか効果が無い）</span><br /><span><span>&nbsp;&nbsp;</span>ビルド・デプロイシステムにも関わってくる</span><br /><span><span>&nbsp;&nbsp;</span><span>rakusai.icon</span><span>が作った </span><span><a href="https://github.com/nota/sw_skelton">https://github.com/nota/sw_skelton</a></span><span> が参考になる</span></span><br /><br /><br /><br /><span><a href="https://scrapbox.io/shokai/WebWorker">WebWorker</a></span><span>も併用するとアツい</span><br /><span><span>&nbsp;</span>ブラウザ側でマルチスレッドプログラミングができる</span><br /><span><span>&nbsp;&nbsp;</span>最近はスマホでも8コアとか入ってる</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>無料でスケールする</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/%E3%82%A8%E3%83%83%E3%82%B8%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0">エッジコンピューティング</a></span><br /><span><span>&nbsp;</span>API設計が変わってくる</span><br /><span><span>&nbsp;</span>これを</span><br /><span><span>&nbsp;&nbsp;</span>サーバーでデータを計算をしてブラウザに返す</span><br /><span><span>&nbsp;</span>こうしていく</span><br /><span><span>&nbsp;&nbsp;</span>サーバーはデータをドカッと返す</span><br /><span><span>&nbsp;&nbsp;</span>ブラウザで計算する</span><br /><span><span>&nbsp;</span>cacheされたAPIレスポンスを元に、ブラウザ側でインタラクティブな事をやれる</span><br /><span><span>&nbsp;</span>こういう分業になる様にAPIを作っていくと、たぶんオフラインモードでできる事が増える</span><br /><span><span>&nbsp;&nbsp;</span>サーバー</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>データの単純な保存、アクセス権限チェック</span><br /><span><span>&nbsp;&nbsp;</span>ブラウザ</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>計算していい感じに表示</span><br /><span><span>&nbsp;</span><span>詳しくは</span><span><a href="https://scrapbox.io/shokai/%E6%A4%9C%E7%B4%A2%E3%82%84%E6%8E%A8%E8%96%A6%E3%82%92WebWorker%E3%81%A7%E3%82%84%E3%82%8B">検索や推薦をWebWorkerでやる</a></span><span>へ</span></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[assets cache - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/assets_cache</link>
            <guid>https://scrapbox.io/shokai/assets_cache</guid>
            <pubDate>Sun, 02 Jun 2019 06:06:01 GMT</pubDate>
            <description><![CDATA[<br /><span><a href="https://scrapbox.io/shokai/SPA">SPA</a></span><span>を構築するのに必要な部品を、</span><span><a href="https://scrapbox.io/shokai/CacheStorage">CacheStorage</a></span><span>にあらかじめ保存しておく</span><span><a href="https://scrapbox.io/shokai/Scrapbox%E3%81%AE%E9%83%A8%E5%93%81">Scrapboxの部品</a></span><br /><br />この機能だけ単体で練習した<br /><span><span>&nbsp;</span><a href="https://github.com/nota/sw_skelton">https://github.com/nota/sw_skelton</a></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[正規表現の変形で作る独自記法WiKi Parser - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE%E3%81%AE%E5%A4%89%E5%BD%A2%E3%81%A7%E4%BD%9C%E3%82%8B%E7%8B%AC%E8%87%AA%E8%A8%98%E6%B3%95WiKi_Parser</link>
            <guid>https://scrapbox.io/shokai/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE%E3%81%AE%E5%A4%89%E5%BD%A2%E3%81%A7%E4%BD%9C%E3%82%8B%E7%8B%AC%E8%87%AA%E8%A8%98%E6%B3%95WiKi_Parser</guid>
            <pubDate>Sat, 01 Jun 2019 10:35:39 GMT</pubDate>
            <description><![CDATA[<br /><span><span>&nbsp;</span><span>shokai.icon</span><span> @shokai</span></span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai">https://scrapbox.io/shokai</a></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/966f89888c2c99d716ea8dad7bacf7a6"><img src="https://gyazo.com/966f89888c2c99d716ea8dad7bacf7a6/raw"/></a></span><br /><br /><br /><span>これは</span><span><a href="https://scrapbox.io/shokai/builderscon_tokyo_2017">builderscon tokyo 2017</a></span><span>のLT</span><span><a href="https://scrapbox.io/shokai/%E7%99%BA%E8%A1%A8%E8%B3%87%E6%96%99">発表資料</a></span><span>です</span><br /><span><span>&nbsp;</span><span>右のメニューのStart Presentationで</span><span><a href="https://scrapbox.io/shokai/%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89">スライド</a></span><span>になります</span></span><br /><br /><span><span>&nbsp;</span>応募した内容</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://builderscon.io/tokyo/2017/session/715cda1a-0c7d-4a54-8bf4-cc0ae9bbe2f4">正規表現の変形で作る独自記法のWiKi parser - builderscon tokyo 2017</a></span><br /><span><span>&nbsp;</span>感想など</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/builderscon_tokyo_2017%E3%81%A7LT%E3%81%97%E3%81%9F">builderscon tokyo 2017でLTした</a></span><br /><br /><br /><br /><br />今日の話<br /><span><span>&nbsp;</span>1. 独自記法をどんどん作って乱立させよう</span><br /><span><span>&nbsp;</span>2. その実装方法</span><br /><br /><span><span>&nbsp;</span>元々20分ぐらいライブコーディングで説明してもうまくまとまらなかった話を飛び入りで5分にまとめてリベンジしにきた</span><br /><br /><br /><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>というWiKiを作っている</span><br /><span><span>&nbsp;</span><span>独自のWiKi</span><span><a href="https://scrapbox.io/shokai/%E8%A8%98%E6%B3%95">記法</a></span><span>を実装</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/8668866112b6ce2a5537e20d9afdbf4c"><img src="https://gyazo.com/8668866112b6ce2a5537e20d9afdbf4c/raw"/></a></span><br /><br /><br /><br />なぜ独自記法？<br /><span><span>&nbsp;</span><img src="ページ間リンクが最も重要な機能だから"/></span><br /><span><span>&nbsp;&nbsp;</span>1ページ内の装飾よりも</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Markdown">Markdown</a></span><span>は記号が予約されすぎていて拡張余地が無い</span></span><br /><span><span>&nbsp;&nbsp;</span><span>[</span><span>も</span><span>(</span><span>も全部予約されてる</span></span><br /><span><span>&nbsp;&nbsp;</span><img src="じゃあ全部作ろう"/></span><br /><br /><span><span>&nbsp;</span>Scrapbox記法</span><br /><span><span>&nbsp;&nbsp;</span>[builderscon]</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/builderscon">builderscon</a></span><span>というリンク記法になる</span></span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/builderscon">#builderscon</a></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>見た目はhashtagだけど内部的にはリンク記法と同じ</span><br /><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/2e639f1da5d8d317130a2c1bd2d3f39b"><img src="https://gyazo.com/2e639f1da5d8d317130a2c1bd2d3f39b/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>書いたそばからリンク構造を辿って、推薦が更新されていく</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/6dc396b96f14603770c7423dbf507810"><img src="https://gyazo.com/6dc396b96f14603770c7423dbf507810/raw"/></a></span><br /><br /><br />記法は重要<br /><span><span>&nbsp;</span>ドキュメントツールにはコンセプトに最適化した記法が必要</span><br /><span><span>&nbsp;&nbsp;</span>体験が中途半端になるので、リンク記法を最優先したい</span><br /><span><span>&nbsp;&nbsp;</span>必ずしもMarkdownが最適では無いし、そもそもプログラマしか使ってない</span><br /><span><span>&nbsp;</span><span>例: </span><span>&lt;img&gt;</span><span>に</span><span>&lt;a&gt;</span><span>を付けたい</span></span><br /><span><span>&nbsp;&nbsp;</span>Markdown</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>[![タイトル](画像URL)](リンク先URL)</span><br /><span><span>&nbsp;&nbsp;</span>Scrapbox記法</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>[画像URL リンク先URL]</span><span>もしくは</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>[リンク先URL 画像URL]</span><span>どっちも可</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><strong><span>物を覚えない為にパソコン使ってるんだから</span><span><a href="https://scrapbox.io/shokai/%E9%A0%86%E4%B8%8D%E5%90%8C">順不同</a></span><span>で書きたい</span></strong></span><br /><br /><span><span>&nbsp;</span>互換性とか気にしなくていいのでは？</span><br /><span><span>&nbsp;&nbsp;</span>良いアプリならユーザーが勝手にmarkdownとの変換ツール等を作ってくれる</span><br /><span><span>&nbsp;</span>どんどん分裂していこう</span><br /><br /><br />WiKi parserを簡単に作る<br /><span><span>&nbsp;</span>正規表現でやる</span><br /><span><span>&nbsp;&nbsp;</span>まじめに1文字ずつ読むようなparserとか書かない</span><br /><span><span>&nbsp;&nbsp;</span>React使うのでclient js側でparseする</span><br /><span><span>&nbsp;&nbsp;</span>処理はclientに分散するので実行速度は無視</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>サーバーでparseしない</span><br /><span><span>&nbsp;</span><span>どうやっても</span><span><img src="Reactのrenderよりは軽い"/></span><span>ので気にしなくていいと思う</span></span><br /><br />基本的な流れ<br /><span><span>&nbsp;</span>生テキストがある</span><br /><span><span>&nbsp;&nbsp;</span>今日は[builderscon]に行ったよ</span><br /><br /><span><span>&nbsp;</span><span>1. 生テキストを</span><span><strong>正規表現A</strong></span><span>でsplitする</span></span><br /><span><span>&nbsp;&nbsp;</span>記法部分と生テキストに別れる</span><br /><span><span>&nbsp;&nbsp;</span><span>今日は</span><span> と </span><span>[builderscon]</span><span> と </span><span>に行ったよ</span><span>になる</span></span><br /><span><span>&nbsp;</span><span>2. 記法部分から</span><span><strong>正規表現B</strong></span><span>でmatchする</span></span><br /><span><span>&nbsp;&nbsp;</span>記法の中からパーツが取れる</span><br /><span><span>&nbsp;&nbsp;</span><span>[builderscon]</span><span>から</span><span>builderscon</span><span>を取り出す</span></span><br /><span><span>&nbsp;</span>3. あとはtreeを返してReactでDOMにすればいい</span><br /><br /><span><span>&nbsp;</span>つらみ</span><br /><span><span>&nbsp;&nbsp;</span><strong>よく似た正規表現AとB、2つ書く必要がある</strong></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>1つではどうしてもできない</span><br /><span><span>&nbsp;&nbsp;</span><img src="その2つを同時に修正しないとparserが壊れる"/></span><br /><span><span>&nbsp;&nbsp;</span>このスライドでは簡単な正規表現で説明しているけど</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>実際は</span><span>/\[([^\[\]]+)\]/</span><span>とかなので、2つあると間違える</span></span><br /><br />よく似た正規表現<br /><span><span>&nbsp;</span>1. 生テキストから記法とそれ以外を分ける</span><br /><span><span>&nbsp;&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>&quot;今日は</span><span><a href="https://scrapbox.io/shokai/builderscon">builderscon</a></span><span>に行ったよ&quot;</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>.split(/(\</span><span><a href="https://scrapbox.io/shokai/.+%5C">.+\</a></span><span>)/)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>[ &#x27;今日は&#x27;, &#x27;</span><span><a href="https://scrapbox.io/shokai/builderscon">builderscon</a></span><span>&#x27;, &#x27;に行ったよ&#x27; ]</span></span><br /><span><span>&nbsp;</span>2. 記法の中からパーツを取り出す</span><br /><span><span>&nbsp;&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>&quot;</span><span><a href="https://scrapbox.io/shokai/builderscon">builderscon</a></span><span>&quot;.match(/\</span><span><a href="https://scrapbox.io/shokai/(.+)%5C">(.+)\</a></span><span>/)</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>[ &#x27;</span><span><a href="https://scrapbox.io/shokai/builderscon">builderscon</a></span><span>&#x27;,</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&#x27;builderscon&#x27;, // パーツが取れた</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>index: 0,</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>input: &#x27;</span><span><a href="https://scrapbox.io/shokai/builderscon">builderscon</a></span><span>&#x27; ]</span></span><br /><span><span>&nbsp;</span><span>ここで重要なのは丸カッコ</span><span>( )</span><span>の位置で</span></span><br /><span><span>&nbsp;&nbsp;</span>1と2で正規表現の中にあったり外にあったりする</span><br /><span><span>&nbsp;&nbsp;</span>これを変換できれば正規表現1つで済むのでは？！</span><br /><br /><br />つまり<br /><span><span>&nbsp;</span>/\[(.+)\]/</span><br /><span><span>&nbsp;</span>と</span><br /><span><span>&nbsp;</span>/(\[.+\])/</span><br /><span><span>&nbsp;</span>を変換したい</span><br /><br />解決方法<br /><span><span>&nbsp;</span>正規表現Cを宣言し、AとB2つの正規表現に変換する</span><br /><span><span>&nbsp;</span>flagsとsourceを使うと変形できるじゃん</span><br /><span><span>&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;</span><span>var reg = /\</span><span><a href="https://scrapbox.io/shokai/.+%5C">.+\</a></span><span>/mi</span></span><br /><span><span>&nbsp;&nbsp;</span>undefined</span><br /><span><span>&nbsp;&nbsp;</span>reg.flags</span><br /><span><span>&nbsp;&nbsp;</span>&#x27;im&#x27;</span><br /><span><span>&nbsp;&nbsp;</span>reg.source</span><br /><span><span>&nbsp;&nbsp;</span><span>&#x27;\\</span><span><a href="https://scrapbox.io/shokai/.+%5C%5C">.+\\</a></span><span>&#x27;</span></span><br /><span><span>&nbsp;&nbsp;</span>new RegExp(&#x27;(&#x27; + reg.source + &#x27;)&#x27;, reg.flags)</span><br /><span><span>&nbsp;&nbsp;</span><span>/(\</span><span><a href="https://scrapbox.io/shokai/.+%5C">.+\</a></span><span>)/im  // 前後に丸カッコ付けた新しい正規表現</span></span><br /><br /><br /><span>capture </span><span>(</span><span>と</span><span>)</span><span> をどうにかする</span><br /><span><span>&nbsp;</span>/\[(.+)\]/</span><br /><span><span>&nbsp;</span>/(\[.+\])/</span><br /><span><span>&nbsp;</span>を変換したいが、丸カッコを単純に削除してしまうと壊れる正規表現がある</span><br /><span><span>&nbsp;&nbsp;</span><span>(a|b)</span><span>とか</span></span><br /><span><span>&nbsp;</span>丸カッコを無効化すると良さそうだ</span><br /><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/non-capturing_groups">non-capturing groups</a></span><span>を使う</span></span><br /><span><span>&nbsp;&nbsp;</span><span>(a|b)</span><span>を</span><span>(?:a|b)</span><span>にする</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>?:</span><span>を付けると、グループ化はするけどmatchには出てこないようになる</span></span><br /><span><span>&nbsp;&nbsp;</span><span>/\[(.+)\]/</span><span>を</span></span><br /><span><span>&nbsp;&nbsp;</span><span>/\[(?:.+)\]/</span><span>にしてから、</span></span><br /><span><span>&nbsp;&nbsp;</span><span>/(\[(?:.+)\])/</span><span>にするといい</span></span><br /><br /><span><span>&nbsp;</span>sourceを地道にreplaceしてnon-capturing groupsにした正規表現を返す</span><br /><span><span>&nbsp;&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>// disable &quot;capture&quot; in RegExp</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>// replace (~~) with (?:~~)</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>module.exports = function (regexp) {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return regexp</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>.source</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>.replace(/\(\((?!\?)/g, function (leftParenthesis) {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return leftParenthesis + &#x27;?:&#x27;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>})</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>.replace(/(^|</span><span><a href="https://scrapbox.io/shokai/%5E%5C%5C">^\\</a></span><span>)\((?!\?)/g, function (leftParenthesis) {</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return leftParenthesis + &#x27;?:&#x27;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>})</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>}</span><br /><span><span>&nbsp;</span>これで2つの正規表現が変換で作れるようになった</span><br /><br />npmにした<br /><span><span>&nbsp;</span><a href="https://github.com/shokai/disable-regexp-capture">https://github.com/shokai/disable-regexp-capture</a></span><br /><span><span>&nbsp;</span><a href="https://www.npmjs.com/package/disable-regexp-capture">https://www.npmjs.com/package/disable-regexp-capture</a></span><br /><span><span>&nbsp;</span><a href="https://www.npmjs.com/package/disable-regexp-capture"><img src="https://gyazo.com/5619c57610cde3ee9a03a60769bc8f05/raw"/></a></span><br /><br /><br /><br />最終型<br /><span><span>&nbsp;</span>ここから色々やると、1つの正規表現を書くだけでparserが作れるようになる</span><br /><span><span>&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;</span><span>export const parsePageLink = createNodeParser(/\[([^\</span><span><a href="https://scrapbox.io/shokai/%5C">\</a></span><span>]+)\]/, (</span><span>page</span><span>) =&gt; ({</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>type: &#x27;pageLink&#x27;,</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>page: title</span><br /><span><span>&nbsp;&nbsp;</span>}))</span><br /><br /><span><span>&nbsp;</span>まとめ</span><br /><span><span>&nbsp;&nbsp;</span>正規表現1つ書けばよくなってメンテナンス性が上がった</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[Scrapboxの開発 - React & Websocketで作るリアルタイムWiki - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/Scrapbox%E3%81%AE%E9%96%8B%E7%99%BA_-_React_&amp;_Websocket%E3%81%A7%E4%BD%9C%E3%82%8B%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0Wiki</link>
            <guid>https://scrapbox.io/shokai/Scrapbox%E3%81%AE%E9%96%8B%E7%99%BA_-_React_&amp;_Websocket%E3%81%A7%E4%BD%9C%E3%82%8B%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0Wiki</guid>
            <pubDate>Sat, 01 Jun 2019 10:35:25 GMT</pubDate>
            <description><![CDATA[<span><span>&nbsp;</span><span>今日の</span><span><a href="https://scrapbox.io/shokai/%E7%99%BA%E8%A1%A8%E8%B3%87%E6%96%99">発表資料</a></span><span>です </span><span>shokai.icon</span></span><br /><span><span>&nbsp;&nbsp;</span><span>発表中に</span><span><a href="https://scrapbox.io/shokai/%E5%90%8C%E6%99%82%E7%B7%A8%E9%9B%86">同時編集</a></span><span>可能です</span></span><br /><span><span>&nbsp;&nbsp;</span><span>まじかよ</span><span>ymrl.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>sugoi </span><br /><span><span>&nbsp;&nbsp;</span>つらい</span><br /><span><span>&nbsp;&nbsp;</span><span>がんばれがんばれ</span><span>geta6.icon</span></span><br /><span><span>&nbsp;&nbsp;</span>すげぇ</span><br /><span><span>&nbsp;&nbsp;</span><span>楽しい</span><span>krtx.icon</span></span><br /><span><span>&nbsp;&nbsp;</span><span>編集間違えたら </span><span>ctrl-z</span><span> or </span><span>command-z</span><span> で戻せます</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%81%AD%E3%82%80%E3%81%84">ねむい</a></span><span>makimoto.icon</span><span>ymrl.icon*2</span><span>makimoto.icon*3</span><span>asonas.icon</span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>わかる</span><span>shokai.icon*3</span></span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/yabai">yabai</a></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/redo">redo</a></span><span> 機能はやくくれ</span></span><br /><br /><span><span>&nbsp;&nbsp;</span><span>がんばれ！！！！！</span><span>uzulla.icon</span></span><br /><span><span>&nbsp;&nbsp;</span><span>え、react</span><span>tikit.icon</span></span><br /><span><span>&nbsp;&nbsp;</span><span>すごかった</span><span>minato128.icon</span></span><br /><span><span>&nbsp;</span></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/GyaPC2016">#GyaPC2016</a></span><span><span> </span><span><a href="https://scrapbox.io/shokai/slide">#slide</a></span></span></span><br /><br /><strong>！！ページ右側の「Start presentation」でスライドになります！！</strong><br /><br /><span>Scrapbox.icon</span><span>の開発 - </span><span>React.icon</span><span> &amp; </span><span><a href="https://scrapbox.io/shokai/Websocket">Websocket</a></span><span>で作るリアルタイム</span><span><a href="https://scrapbox.io/shokai/Wiki">Wiki</a></span><br /><span><span>&nbsp;</span><span>@shokai </span><span>shokai.icon</span></span><br /><span><span>&nbsp;</span><span>Nota Inc..icon</span><span>, Inc.</span></span><br /><br /><span><span>&nbsp;</span><a href="https://gyazo.com/60f40e0ffa7bdb6c23cff0accae8f511"><img src="https://gyazo.com/60f40e0ffa7bdb6c23cff0accae8f511/raw"/></a></span><br /><br /><br />Scrapboxの開発<br /><span><span>&nbsp;</span><span>1. </span><span><a href="https://scrapbox.io/shokai/%E9%96%8B%E7%99%BA%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9">開発プロセス</a></span></span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>kininaru</span><br /><span><span>&nbsp;</span>2. 実装のテクニカルなこと</span><br /><span><span>&nbsp;</span>について話します</span><br /><br /><img src="開発プロセス"/><br /><span><span>&nbsp;</span><span>shokai.icon</span><span> 完全リモートワーク、目覚ましをかけずに好きなだけ寝る派</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E6%A8%AA%E6%B5%9C">横浜</a></span><span>にいる</span></span><br /><span><span>&nbsp;&nbsp;</span>適当に寝て適当に起きる</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Nota_Inc.">Nota Inc.</a></span><span> (会社)</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E4%BA%AC%E9%83%BD">京都</a></span><span>にある</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E9%9B%A8">雨</a></span><span>が降ったら家から出ない人もいる</span></span><br /><br /><span>まず</span><span><a href="https://scrapbox.io/shokai/%E3%83%89%E3%83%83%E3%82%B0%E3%83%95%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0">ドッグフーディング</a></span><span>する</span><br /><span><span>&nbsp;</span>自分で色々な用途に使ってみる</span><br /><span><span>&nbsp;</span>用途が違うと、ほしい機能も違う</span><br /><br /><span><span>&nbsp;&nbsp;</span><span>techblog 兼 料理レシピ (</span><span><a href="https://scrapbox.io/shokai/">/shokai</a></span><span>で公開)</span></span><br /><span><span>&nbsp;&nbsp;</span>大学の研究室</span><br /><span><span>&nbsp;&nbsp;</span>家族で使う</span><br /><span><span>&nbsp;&nbsp;</span>同人サークル</span><br /><span><span>&nbsp;&nbsp;</span>ゲームの編成・装備・経過のログ取り</span><br /><span><span>&nbsp;</span></span><br /><span><span>&nbsp;</span>色々な機能が欲しくなってくる</span><br /><span><span>&nbsp;&nbsp;</span>でも、なんでも入れるとボタンだらけになってよくない（難しい・・）</span><br /><br />techblog 兼 料理レシピ<br /><span><span>&nbsp;</span>として使う場合</span><br /><span><span>&nbsp;</span>公開機能が欲しくなる</span><br /><span><span>&nbsp;</span>公開・非公開プロジェクトを設定できるようにしよう</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/2de46f3af3b62b83c61131ebad14f637"><img src="https://gyazo.com/2de46f3af3b62b83c61131ebad14f637/raw"/></a></span><br /><br />会社や大学の研究室<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89">スライド</a></span><span>を作りたい</span></span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/153d71dccef64cfe0df1937c1aadf4e2"><img src="https://gyazo.com/153d71dccef64cfe0df1937c1aadf4e2/raw"/></a></span><br /><span><span>&nbsp;&nbsp;</span>研究ノートを書いてるのに、発表のためにスライドを作り直すのは無駄</span><br /><span><span>&nbsp;&nbsp;</span>スライド作るのが面倒くさい、究極的には発表中に誰かにリアルタイム作成してもらいたい</span><br /><span><span>&nbsp;</span></span><br /><span><span>&nbsp;</span>ページ名が説明的に長くなりがち</span><br /><span><span>&nbsp;&nbsp;</span><strong>長くなってもよい</strong></span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%81%AF%E3%81%A6%E3%83%96">はてブ</a></span><span>に上がってくるようなみたいなエモーショナルなタイトルをどんどんつけるべき</span></span><br /><span><span>&nbsp;&nbsp;</span>リンクは、入力補完でなんとかする</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/18f2b3afad4a624728c566ad66e4fcec"><img src="https://gyazo.com/18f2b3afad4a624728c566ad66e4fcec/raw"/></a></span><br /><br /><span><span>&nbsp;</span>色々な人がいる</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89">キーバインド</a></span><span>を選べる</span></span><br /><span><span>&nbsp;&nbsp;</span>OS毎のショートカットキーの再現</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/13b49b8eb4e8974e454b23dd01b2b9c6"><img src="https://gyazo.com/13b49b8eb4e8974e454b23dd01b2b9c6/raw"/></a></span><br /><br />Scrapboxの開発にScrapboxを使う<br /><span><span>&nbsp;</span>流れ</span><br /><span><span>&nbsp;</span>1. 好き放題、意見・要望・苦情を書いてもらう</span><br /><span><span>&nbsp;</span><span>2. タグで管理、</span><span><a href="https://scrapbox.io/shokai/shokai%E3%81%AEToDo">shokaiのToDo</a></span><span>やsprintに持ってくる</span></span><br /><span><span>&nbsp;</span>3. Sprint</span><br /><span><span>&nbsp;&nbsp;</span>アレが抜けてない？とか指摘される</span><br /><span><span>&nbsp;</span>4. 実装前に軽く設計をScrapboxに書く</span><br /><span><span>&nbsp;</span><span>5. </span><span><a href="https://scrapbox.io/shokai/Gyazo_GIF">Gyazo GIF</a></span><span>撮ってpullreq作る</span></span><br /><br /><a href="https://scrapbox.io/shokai/%E3%82%BF%E3%82%B9%E3%82%AF%E7%AE%A1%E7%90%86">タスク管理</a><br /><span><span>&nbsp;&nbsp;</span><span>長いリストや、</span><span><a href="https://scrapbox.io/shokai/%E7%9B%AE%E6%AC%A1">目次</a></span><span>ページは作らない</span></span><br /><br /><span><span>&nbsp;</span>個別のタスク毎に1つずつページを作る</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/Gyazz%E3%81%B8%E3%81%AE%E8%A6%81%E6%9C%9B">#Gyazzへの要望</a></span><span> タグを付ける</span></span><br /><span><span>&nbsp;&nbsp;</span><span>自分がやるぞ！と思った物に</span><span><span> </span><span><a href="https://scrapbox.io/shokai/shokai%E3%81%AEToDo">#shokaiのToDo</a></span></span><span> タグを付ける</span></span><br /><span><span>&nbsp;&nbsp;</span>関連ページリストで一覧できる</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/2e9f3a1ce3048c4a4f8a85259aa75853"><img src="https://gyazo.com/2e9f3a1ce3048c4a4f8a85259aa75853/raw"/></a></span><br /><span><span>&nbsp;</span><strong>やりたい事は100以上ある</strong></span><br /><span><span>&nbsp;&nbsp;</span>個別ページ内で、同時並行して議論している</span><br /><span><span>&nbsp;&nbsp;</span>「やりたい事」の状態では優先度は付けられないし、無理につけない</span><br /><br /><br />家の引っ越しとかもこんな感じでやれる<br /><span><span>&nbsp;</span><a href="https://gyazo.com/daf5942b896ec78904bd33ec89087cc4"><img src="https://gyazo.com/daf5942b896ec78904bd33ec89087cc4/raw"/></a></span><br /><br />巨大リストを作らない<br /><span><span>&nbsp;</span>巨大なToDoリストを見ると気が滅入る</span><br /><span><span>&nbsp;</span><img src="山が高すぎると登る気にならない"/></span><br /><br />ページのネットワークを作る<br /><span><span>&nbsp;</span>編集していると、実はこれ同じ機能を要求しているんじゃね？というissue群に気づいたりする</span><br /><br />Sprint<br /><span><span>&nbsp;</span><span>2週間分の「やるべき」「やりたい」を、</span><span><span> </span><span><a href="https://scrapbox.io/shokai/shokai%E3%81%AEToDo">#shokaiのToDo</a></span></span><span> から取り出してくる</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/edb5f68c4b0f3a5e69f2c96a624c9568"><img src="https://gyazo.com/edb5f68c4b0f3a5e69f2c96a624c9568/raw"/></a></span><br /><br />やりたい事は全部scrapbox書いてある<br /><span><span>&nbsp;</span><span><strike>ぶつかり稽古</strike></span><span>ガチ議論をする</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/9847a794c9be40654e266aed347a3c0e"><img src="https://gyazo.com/9847a794c9be40654e266aed347a3c0e/raw"/></a></span><br /><span><span>&nbsp;</span>リモートワークでも「どれからやっても良いよ」という雰囲気を作れる</span><br /><span><span>&nbsp;</span>たまに緊急で上から降ってくるタスクがあっても、妥当性を感じる</span><br /><span><span>&nbsp;&nbsp;</span>やらされてる感が無くなる</span><br /><br /><span>突然の</span><span><a href="https://scrapbox.io/shokai/Pull_Request">Pull Request</a></span><br /><span><span>&nbsp;</span>名案が思いついたら突然実装される</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/ad0ea4ac5bc517db6b375598ca1e08a6"><img src="https://gyazo.com/ad0ea4ac5bc517db6b375598ca1e08a6/raw"/></a></span><br /><br /><br /><strong>Scrapboxの実装</strong><br /><span><span>&nbsp;</span>テクニカルな話</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/YAPC2016Gyazz%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89">/shokai/YAPC2016Gyazzスライド</a></span><span>にも詳しい</span></span><br /><br /><span><span>&nbsp;</span>コア</span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/WYSIWYG">WYSIWYG</a></span><span>で画像やリンクも貼れるけど、編集ツールバーやボタンが無いエディタ</span></span><br /><span><span>&nbsp;&nbsp;</span>markdownより簡単なシンタックスで編集・文字装飾できる</span><br /><span><span>&nbsp;&nbsp;</span><span>Atom.icon</span><span>を参考にして</span><span>React.icon</span><span>で実装した</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/contenteditable">contenteditable</a></span><span>は使ってない</span></span><br /><span><span>&nbsp;</span><span>Socket.IO.icon</span><span>と自作の同期システムでうまいこと同時編集できる</span></span><br /><span><span>&nbsp;&nbsp;</span>Gitを参考にsubversionみたいなものを実装した</span><br /><br />実装環境<br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/Node.js">Node.js</a></span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/express">express</a></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Socket.IO">Socket.IO</a></span><span> + </span><span><a href="https://scrapbox.io/shokai/Redis">Redis</a></span></span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/MongoDB">MongoDB</a></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/React">React</a></span><span> + </span><span><a href="https://scrapbox.io/shokai/jQuery">jQuery</a></span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/EventEmitter">EventEmitter</a></span><span>風Store</span></span><br /><span><span>&nbsp;</span><span>全面的に</span><span><a href="https://scrapbox.io/shokai/async-await">async-await</a></span></span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/Browserify">Browserify</a></span><br /><br /><img src="エディタの実装"/><br /><span><span>&nbsp;</span>カーソルの縦棒はdiv</span><br /><span><span>&nbsp;</span>緑の範囲選択もdiv3つ</span><br /><span><span>&nbsp;</span><span>隠し</span><span>&lt;textarea /&gt;</span></span><br /><span><span>&nbsp;&nbsp;</span>IMEウィンドウを見せるためだけに存在する</span><br /><span><span>&nbsp;&nbsp;</span>カーソルの右側に浮いていて、ついてくる</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/688d80344a2b353762ec9c79e68a637b"><img src="https://gyazo.com/688d80344a2b353762ec9c79e68a637b/raw"/></a></span><br /><span><span>&nbsp;</span><span>Atom.icon</span><span>が参考になった</span></span><br /><br />y行目のx文字目の画面上の座標はどこか？<br /><span><span>&nbsp;</span><span>生テキスト</span><span>こんにちは</span><span>を</span></span><br /><span><span>&nbsp;</span>1文字ずつ分割して</span><br /><span><span>&nbsp;&nbsp;</span>code:editor.html</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>&lt;div class=&#x27;lines&#x27;&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;div class=&#x27;line&#x27; id=&#x27;L1&#x27;&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;span class=&#x27;c-1&#x27;&gt;こ&lt;/span&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;span class=&#x27;c-2&#x27;&gt;ん&lt;/span&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;span class=&#x27;c-3&#x27;&gt;に&lt;/span&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;span class=&#x27;c-4&#x27;&gt;ち&lt;/span&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;span class=&#x27;c-5&#x27;&gt;は&lt;/span&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;/div&gt;</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>&lt;/div&gt;</span><br /><span><span>&nbsp;</span>jQueryで位置を取得する</span><br /><span><span>&nbsp;&nbsp;</span>let {left, top} = $(&#x27;.lines #L1 .c-4&#x27;).position()</span><br /><br /><span><span>&nbsp;</span>クリックした位置から何行目の何文字目なのか？を求める</span><br /><span><span>&nbsp;&nbsp;</span>逆をやればいい</span><br /><br />あとはカーソル移動やemacsキーバインド等を自前で実装すればok<br /><br /><span><a href="https://scrapbox.io/shokai/React">React</a></span><span>と</span><span><a href="https://scrapbox.io/shokai/jQuery">jQuery</a></span><span>は相性悪い？</span><br /><span><span>&nbsp;</span>と、よくインターネットに書いてある</span><br /><span><span>&nbsp;</span>jQueryはクロスブラウザで座標の扱いが完璧っぽい！</span><br /><br /><span><span>&nbsp;</span>jQueryでDOM書き換えしなければok</span><br /><span><span>&nbsp;&nbsp;</span><span>render→</span><span>componentDidUpdate</span><span>からjQueryで座標計算→stateに入れる→再render</span></span><br /><br /><img src="複数人で同時編集"/><br /><br /><a href="https://scrapbox.io/shokai/%E5%90%8C%E6%99%82%E7%B7%A8%E9%9B%86">同時編集</a><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E5%AE%9F%E7%94%A8Git">実用Git</a></span><span>を読む</span></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/20b4fe90c13dafd705d1f75d02adb4de"><img src="https://gyazo.com/20b4fe90c13dafd705d1f75d02adb4de/raw"/></a></span><br /><span><span>&nbsp;</span><strong>こういう「コミット」をやりとりすればなんとかなるのでは！？</strong></span><br /><span><span>&nbsp;</span>code:commit.json</span><br /><span><span>&nbsp;&nbsp;</span>{</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;id&quot;: hash,</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;parent_id&quot;: parent_hash, // 1つ前への参照</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&quot;changes&quot;: </span><span><a href="https://scrapbox.io/shokai/_%E5%A4%89%E6%9B%B4%E5%86%85%E5%AE%B9,_%E5%A4%89%E6%9B%B4%E5%86%85%E5%AE%B9,_%E5%A4%89%E6%9B%B4%E5%86%85%E5%AE%B9_"> 変更内容, 変更内容, 変更内容 </a></span></span><br /><span><span>&nbsp;&nbsp;</span>}</span><br /><br /><br />編集の命令は3種類だけ<br /><span><span>&nbsp;</span><span>1つの</span><span>commit</span><span>の</span><span>chanegs</span><span>配列に複数の編集が格納される</span></span><br /><br /><span><span>&nbsp;</span><img src="insert"/></span><br /><span><span>&nbsp;&nbsp;</span>隣の行のidを指定して新しい行を追加</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>code:javascript</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>{</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;_insert&quot;: positionId, // 文字を挿入する一つ下の位置にある行のId</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;lines&quot;: {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;text&quot;: text,</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;id&quot;: lineId // 新しく生成された行のid</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>}</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>}</span><br /><span><span>&nbsp;&nbsp;</span>新規に行を挿入する</span><br /><span><span>&nbsp;&nbsp;</span><span>最後に挿入するときは、特殊IDの</span><span>_end</span><span>を指定する。</span></span><br /><span><span>&nbsp;&nbsp;</span>複数行を挿入するときは、insertを複数個作る</span><br /><br /><br /><span><span>&nbsp;</span><img src="update"/></span><br /><span><span>&nbsp;&nbsp;</span>idを指定して更新</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>{</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;_update&quot;: lineId, // 変更する行のId</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;lines&quot;: { &quot;text&quot;: text }</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>}</span><br /><span><span>&nbsp;&nbsp;</span>行を変更する</span><br /><br /><span><span>&nbsp;</span><img src="delete"/></span><br /><span><span>&nbsp;&nbsp;</span>idを指定して削除</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>code:js</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>{</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&quot;_delete&quot;: lineId, // 削除する行のId</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>lines: -1</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>}</span><br /><span><span>&nbsp;&nbsp;</span>行を削除する</span><br /><br />コンフリクトしたら？<br /><span><span>&nbsp;</span>ユーザー側でmerge画面にするわけにはいかない</span><br /><span><span>&nbsp;</span>コンフリクト判定はサーバー側</span><br /><span><span>&nbsp;</span>clientはとりあえずpushする</span><br /><span><span>&nbsp;&nbsp;</span>pushがrejectされたらpull</span><br /><span><span>&nbsp;&nbsp;</span><span>git rebase</span><span>のような操作をする</span></span><br /><br /><span><span>&nbsp;</span><img src="気合マージ!!"/></span><br /><span><span>&nbsp;&nbsp;</span>mergeしよう → コンフリクト → pullしてみる</span><br /><span><span>&nbsp;&nbsp;</span>→ insertが参照していた行が削除されてる、どこにinsertしていいのかわからない！</span><br /><span><span>&nbsp;&nbsp;</span>→ commitをさかのぼって、「削除された行を参照したinsertをした行」を参照してinsertする</span>]]></description>
        </item>
        <item>
            <title><![CDATA[ServiceWorkerをproductionで使ってる話 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/ServiceWorker%E3%82%92production%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%8B%E8%A9%B1</link>
            <guid>https://scrapbox.io/shokai/ServiceWorker%E3%82%92production%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%8B%E8%A9%B1</guid>
            <pubDate>Sat, 01 Jun 2019 10:35:09 GMT</pubDate>
            <description><![CDATA[<br /><span><span>&nbsp;</span><span>shokai.icon</span><span> @shokai</span></span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai">https://scrapbox.io/shokai</a></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Nota_Inc.">Nota Inc.</a></span><span>で横浜から京都にリモートワークしてます</span></span><br /><span><span>&nbsp;</span><a href="https://www.wantedly.com/companies/nota/post_articles/112365">メンバーの半分がリモートワークでエンジニア募集中</a></span><br /><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/roppongi.js%235">roppongi.js#5</a></span><span>の</span><span><a href="https://scrapbox.io/shokai/%E7%99%BA%E8%A1%A8%E8%B3%87%E6%96%99">発表資料</a></span><span>です</span></span><br /><span><span>&nbsp;</span><span>右のメニューの</span><span>Start presentation</span><span>でスライドになります</span></span><br /><br /><span><span>&nbsp;</span><span>前回：</span><span><a href="https://scrapbox.io/shokai/WebWorker%E3%82%92production%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%8B%E8%A9%B1">WebWorkerをproductionで使ってる話</a></span></span><br /><br /><span><a href="https://scrapbox.io/shokai/Scrapbox">Scrapbox</a></span><span>に</span><span><a href="https://scrapbox.io/shokai/ServiceWorker">ServiceWorker</a></span><span>を導入した</span><br /><span><span>&nbsp;</span>画面遷移が速くなった</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/86faa398b233f86be3ad4a15cd2e777e"><img src="https://gyazo.com/86faa398b233f86be3ad4a15cd2e777e/raw"/></a></span><br /><br /><span><span>&nbsp;</span>ScrapboxはWiKiみたいなノートアプリです</span><br /><span><span>&nbsp;</span><span><a href="https://gyazo.com/343caf0f14cc565ce656a43e9a02aad2"><img src="https://gyazo.com/343caf0f14cc565ce656a43e9a02aad2/raw"/></a></span><span><a href="https://gyazo.com/471d8cab15bf364febe29e6f2cafb5ad"><img src="https://gyazo.com/471d8cab15bf364febe29e6f2cafb5ad/raw"/></a></span></span><br /><br /><br /><br /><br />今日の話<br /><span><span>&nbsp;</span>1. ServiceWorkerって何？</span><br /><span><span>&nbsp;</span>2. productionで使って得た知見</span><br /><br /><br /><strong>ServiceWorkerって何？</strong><br /><span><span>&nbsp;</span><span>わかる人いますか</span><span>shokai.icon</span></span><br /><span><span>&nbsp;</span>私もよくわかりませんが…</span><br /><br /><br />ググるとわかる<br /><span><span>&nbsp;</span><a href="https://gyazo.com/e4d60843ceddd85aa65169e7027a6943"><img src="https://gyazo.com/e4d60843ceddd85aa65169e7027a6943/raw"/></a></span><br /><span><span>&nbsp;</span>リッチなオフライン体験、定期的なバックグラウンド同期、プッシュ通知など、これまでネイティブアプリを必要としていた機能が Web にもやってきます。Service Worker はそれらの機能を提供する基盤技術です。</span><br /><span><span>&nbsp;</span><a href="https://developers.google.com/web/fundamentals/primers/service-workers/?hl=ja">https://developers.google.com/web/fundamentals/primers/service-workers/?hl=ja</a></span><br /><br /><br />回線切ってググるとわかる<br /><span><span>&nbsp;</span><a href="https://gyazo.com/438ef8eb64c22ae94b1885b1b9d8fafd"><img src="https://gyazo.com/438ef8eb64c22ae94b1885b1b9d8fafd/raw"/></a></span><br /><span><span>&nbsp;</span>Chromeのホーム画面はServiceWorkerで実装されてるから、オフラインでも表示できる</span><br /><span><span>&nbsp;</span>workerのソースも見れるぞ</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://www.google.co.jp/_/chrome/newtab-serviceworker.js">https://www.google.co.jp/_/chrome/newtab-serviceworker.js</a></span><br /><br />オフライン表示だけではない<br /><span><span>&nbsp;</span>webページからRequestが発行されて</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerを通って</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>サーバーに送信される</span><br /><span><span>&nbsp;</span>サーバーからResponseが返ってきて</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerを通って</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>webページにデータが戻る</span><br /><br /><span><span>&nbsp;</span>ブラウザ内で動くプログラマブルなproxy、というイメージ</span><br /><span><span>&nbsp;</span>色々できる</span><br /><span><span>&nbsp;&nbsp;</span>RequestやResponseを途中で書き換えたり</span><br /><span><span>&nbsp;&nbsp;</span>勝手にRequestを発行してcacheを温めておいたり</span><br /><br /><br />プログラマブルなproxy<br /><span><span>&nbsp;</span>オフライン表示機能がServiceWorkerについてるわけではない</span><br /><span><span>&nbsp;</span>がんばって自分で実装する</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/CacheStorage">CacheStorage</a></span><span>や</span><span><a href="https://scrapbox.io/shokai/IndexedDB">IndexedDB</a></span></span><br /><span><span>&nbsp;&nbsp;</span>fetch event</span><br /><span><span>&nbsp;&nbsp;</span>等を使う</span><br /><br /><br />オフライン表示の例<br /><span><span>&nbsp;</span>cache hitすれば、Requestをサーバーに送らずUIスレッドに返す</span><br /><span><span>&nbsp;</span>cache hitしなければ、サーバーからfetchして返す</span><br /><span><span>&nbsp;</span>code:sw.js</span><br /><span><span>&nbsp;&nbsp;</span>self.addEventListener(&#x27;fetch&#x27;, (event) =&gt; {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>const {request} = event</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>if (request.method !== &#x27;GET&#x27;) return // GET以外をcacheするの怖い</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>event.respondWith((async () =&gt; {</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>// cacheがあれば返す</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const cachedResponse = await self.caches.match(request)</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>if (cachedResponse) return cachedResponse</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>// cacheが無い場合</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const response = await fetch(request)</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>const cache = await self.caches.open(&#x27;foo&#x27;) // 名前は何でも良し</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>cache.put(request, response)</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return response</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>})())</span><br /><span><span>&nbsp;&nbsp;</span>})</span><br /><span><span>&nbsp;</span><span>self.</span><span>とは</span></span><br /><span><span>&nbsp;&nbsp;</span><span>ServiceWorkerにおける</span><span>window.</span><span>や</span><span>global.</span><span>のようなグローバルオブジェクト</span></span><br /><br />CacheStorageとは<br /><span><span>&nbsp;</span>KVS</span><br /><span><span>&nbsp;&nbsp;</span>key: Request</span><br /><span><span>&nbsp;&nbsp;</span>value: Response</span><br /><span><span>&nbsp;&nbsp;</span><span>cache.match(request)</span><span>で探せる</span></span><br /><span><span>&nbsp;</span><span>ServiceWorker内では</span><span>self.caches</span></span><br /><span><span>&nbsp;&nbsp;</span><span>window.caches</span><span>と共通</span></span><br /><span><span>&nbsp;</span><span>cache.addAll([...urls])</span><span>で一気にfetchする事もできる</span></span><br /><br /><br />UIスレッド側でやる事<br /><span><span>&nbsp;</span>ServiceWorker自体のインストールだけやる</span><br /><span><span>&nbsp;&nbsp;</span>navigator.serviceWorker.register(&#x27;./sw.js&#x27;, {scope: &#x27;/&#x27;})</span><br /><span><span>&nbsp;</span>このRequestはServiceWorkerにハンドルしてもらって、こっちはしないで〜</span><br /><span><span>&nbsp;&nbsp;</span><span>とかは</span><span><img src="できない"/></span></span><br /><span><span>&nbsp;</span>全てのRequestがServiceWorkerを通ってしまう</span><br /><span><span>&nbsp;&nbsp;</span><span>webページ内に表示している</span><span><img src="別originへのリクエストも含む"/></span></span><br /><span><span>&nbsp;</span>Responseがどこから来た物なのか判別できない</span><br /><span><span>&nbsp;&nbsp;</span>cache storageから来たのか？</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerはちゃんと最新データをfetchしたのか？</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerがHTTP headerを追加する等、各自で工夫が必要</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%A4%BE%E4%BC%9A%E7%9A%84%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%B3%E3%82%B5%E3%82%B9">社会的コンセンサス</a></span><span>はたぶん無い</span></span><br /><br /><br /><span>応用：</span><span><a href="https://scrapbox.io/shokai/Prefetch">Prefetch</a></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/86faa398b233f86be3ad4a15cd2e777e"><img src="https://gyazo.com/86faa398b233f86be3ad4a15cd2e777e/raw"/></a></span><br /><span><span>&nbsp;</span>光速を超えた</span><br /><span><span>&nbsp;</span>サーバーはアメリカにあるのに、clickした瞬間に画面が表示される</span><br /><span><span>&nbsp;</span>アドレスバーが書き換わった直後にUIスレッドはfetchしている</span><br /><span><span>&nbsp;&nbsp;</span>そこからパケットが太平洋を往復する間、待つ必要があった</span><br /><span><span>&nbsp;</span>click前にcacheを温めておいてもらうようにした</span><br /><span><span>&nbsp;&nbsp;</span><span>onMouseEnterでAPIのURLをServiceWorkerに</span><span><a href="https://scrapbox.io/shokai/postMessage">postMessage</a></span><span>する</span></span><br /><br />Random jumpも速い<br /><span><span>&nbsp;</span>ランダムにページを表示するボタン</span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/36012561fe418ce4150cd0f7c5cae5e3"><img src="https://gyazo.com/36012561fe418ce4150cd0f7c5cae5e3/raw"/></a></span><br /><span><span>&nbsp;</span><span>インターンに来ている</span><span>yutaro.icon</span><span>が一瞬で作ってくれた</span></span><br /><span><span>&nbsp;</span>ランダムなのに速い</span><br /><span><span>&nbsp;</span>ランダム表示したら、次にランダム表示する予定のページをprefetchしている</span><br /><br /><br /><br />対応ブラウザ<br /><span><span>&nbsp;</span><a href="https://caniuse.com/#feat=serviceworkers">https://caniuse.com/#feat=serviceworkers</a></span><br /><span><span>&nbsp;</span><a href="https://gyazo.com/1685be3b7bdadb0d94b7f16627f743e2"><img src="https://gyazo.com/1685be3b7bdadb0d94b7f16627f743e2/raw"/></a></span><br /><span><span>&nbsp;</span>IE以外の最新版ならok</span><br /><br /><br />window閉じても生きてる<br /><span><span>&nbsp;</span>たぶんブラウザのプロセスが生きてる限り生きてるはず</span><br /><span><span>&nbsp;&nbsp;</span><span>setInterval</span><span>で定期的にcacheを更新なんて事も可能</span></span><br /><span><span>&nbsp;</span>でもたまに勝手に死んでる気がする</span><br /><br /><span><span>&nbsp;</span>どうやって観測すればいいんだ？ぜんぜんわからない</span><br /><br /><br />ライフサイクル<br /><span><span>&nbsp;</span>ServiceWorkerが有効になるまで</span><br /><span><span>&nbsp;</span>1. Download</span><br /><span><span>&nbsp;</span>2. Install</span><br /><span><span>&nbsp;</span>3. Activate</span><br /><span><span>&nbsp;</span>ServiceWorkerのインストール自体を、UIスレッドのJavaScriptで行わなければならない</span><br /><span><span>&nbsp;&nbsp;</span>navigator.serviceWorker.register(&#x27;./sw.js&#x27;, {scope: &#x27;/&#x27;})</span><br /><span><span>&nbsp;</span>最初にアクセスしてactivateされるまでは、ServiceWorkerが存在しない</span><br /><span><span>&nbsp;&nbsp;</span>ダウンロード失敗してインストールできない事もある</span><br /><span><span>&nbsp;</span>ServiceWorkerとclient jsやサーバーAPIのバージョンがズレてるタイミングが必ず存在する</span><br /><span><span>&nbsp;&nbsp;</span><span>アクセス毎に</span><span>register</span><span>再実行する事で更新する為</span></span><br /><span><span>&nbsp;&nbsp;</span><a href="https://twitter.com/azu_re/status/1032588942392979457">claimしたらコントロールできるらしい</a></span><br /><span><span>&nbsp;</span>こわい</span><br /><span><span>&nbsp;</span>ServiceWorkerにstateを持たせたりすると絶対こわい</span><br /><br /><br />24時間毎に自動更新される<br /><span><span>&nbsp;</span>らしい</span><br /><span><span>&nbsp;</span>毎日開発してるので、自動更新を観測する暇がない…</span><br /><span><span>&nbsp;</span>ぜんぜんわからない</span><br /><br />Request/Response以外にも<br /><span><span>&nbsp;</span>push通知</span><br /><span><span>&nbsp;&nbsp;</span>右上に出るやつ</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/Background_Sync">Background Sync</a></span><br /><span><span>&nbsp;&nbsp;</span>オフラインの時に発行されたRequestをとっておいて、オンラインになったら一気に送信してくれる</span><br /><span><span>&nbsp;&nbsp;</span>らしい（まだ試したことない）</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/postMessage">postMessage</a></span><br /><span><span>&nbsp;&nbsp;</span>UIスレッドと通信</span><br /><span><span>&nbsp;</span>色々できてすごい！！</span><br /><br /><br /><strong>productionで使って得た知見</strong><br /><br />インストールするユーザーを絞った<br /><span><span>&nbsp;</span>まず最新のChromeを使っているログインユーザーだけ</span><br /><span><span>&nbsp;</span>理由</span><br /><span><span>&nbsp;&nbsp;</span>ServiceWorkerに不具合があった場合に、ServiceWorkerの更新ができなくなる場合がある</span><br /><span><span>&nbsp;&nbsp;</span>インストールはUIスレッドのJavaScriptから行うので</span><br /><span><span>&nbsp;&nbsp;</span><span>index.js</span><span>もServiceWorkerを通ってUIスレッドに配信される</span></span><br /><span><span>&nbsp;&nbsp;</span>24時間毎の自動更新もあるが、丸一日使えないと困る</span><br /><br /><span><a href="https://scrapbox.io/shokai/Sentry">Sentry</a></span><span>いれよう</span><br /><span><span>&nbsp;</span><a href="http://npmjs.com/package/raven-js">http://npmjs.com/package/raven-js</a></span><br /><span><span>&nbsp;</span>ServiceWorker内のエラーを全部捕捉できる</span><br /><span><span>&nbsp;&nbsp;</span>2017年12月にSentryのclientライブラリがfetchに対応した</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://github.com/getsentry/sentry-javascript/issues/1123#issuecomment-351372945">https://github.com/getsentry/sentry-javascript/issues/1123#issuecomment-351372945</a></span><br /><span><span>&nbsp;</span><span>TypeError</span><span>がいっぱいでる</span></span><br /><span><span>&nbsp;&nbsp;</span>fetch結果がstatus 200系以外だとでる</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>ユーザーが埋め込んだ画像とか</span><br /><span><span>&nbsp;&nbsp;</span>名前が変で混乱した</span><br /><span><span>&nbsp;&nbsp;</span>原因：try-catch忘れてた</span><br /><br />PrefetchのせいでRequest増えた<br /><span><span>&nbsp;</span><a href="https://gyazo.com/4d3bcd62fe59510a325f53fb62a6f19b"><img src="https://gyazo.com/4d3bcd62fe59510a325f53fb62a6f19b/raw"/></a></span><br /><span><span>&nbsp;</span>今の所は元気です</span><br /><span><span>&nbsp;</span><span>CPU負荷の高い処理を</span><span><a href="https://scrapbox.io/shokai/WebWorker">WebWorker</a></span><span>に逃がしておいてよかった</span></span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/WebWorker%E3%82%92production%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%8B%E8%A9%B1">WebWorkerをproductionで使ってる話</a></span><br /><br />回線速度を計測できる<br /><span><span>&nbsp;</span><span>navigator.connection.rtt</span><span>でレイテンシを計測したかった</span></span><br /><span><span>&nbsp;&nbsp;</span>Chromeにしか実装されてない</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://scrapbox.io/shokai/Network_Information_API">Network Information API</a></span><br /><span><span>&nbsp;</span>fetchの前と後をServiceWorkerでフックして、時間をはかる</span><br /><span><span>&nbsp;&nbsp;</span>遅い回線ではprefetchをやめる等</span><br /><br />SPAの初期表示に必要な部品だけcacheしてみた<br /><span><span>&nbsp;</span>HTML/JS/CSS/font/画像だけ</span><br /><span><span>&nbsp;&nbsp;</span>APIはcacheしない</span><br /><span><span>&nbsp;</span>サーバーに飛ぶRequest数が減る</span><br /><span><span>&nbsp;&nbsp;</span>304 not modifiedより速い</span><br /><span><span>&nbsp;</span>3G環境では初期ロードが1.5秒速くなった</span><br /><span><span>&nbsp;&nbsp;</span>レイテンシが小さい環境ではあまり変化なし</span><br /><br />public WiFiのログイン画面がハンドルできない<br /><span><span>&nbsp;</span><a href="https://gyazo.com/1322ba0413a43da8b4ce7c7205c73b61"><img src="https://gyazo.com/1322ba0413a43da8b4ce7c7205c73b61/raw"/></a></span><br /><span><span>&nbsp;</span>自分がなぜサーバーに接続できないのか知る手段が無い</span><br /><span><span>&nbsp;&nbsp;</span>ぜんぜんわからない</span><br /><span><span>&nbsp;</span>スマホで出るやつをwebサイトでもやる方法を誰か教えてくれ</span><br /><span><span>&nbsp;&nbsp;</span><a href="https://gyazo.com/4713046cfe5ee20c631538d16641e40e"><img src="https://gyazo.com/4713046cfe5ee20c631538d16641e40e/raw"/></a></span><br /><br /><br /><br />private windowでもRequestがServiceWorker通ってる<br /><span><span>&nbsp;</span>Cache Storageは別になっているようだが</span><br /><span><span>&nbsp;</span>普通のwindowの方でインストールされたら、private windowでは既にインストールされた事になっているようだ</span><br /><br /><br />まとめ<br /><span><span>&nbsp;</span>ただのオフライン表示システムではない</span><br /><span><span>&nbsp;</span>プログラマブルなproxyです</span><br /><span><span>&nbsp;</span>下手すると24時間サービスが開けなくなる恐怖</span><br /><span><span>&nbsp;</span>わからない事だらけだ</span><br /><span><span>&nbsp;</span>怖いのでSentry入れよう</span><br /><br />]]></description>
        </item>
        <item>
            <title><![CDATA[福岡 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E7%A6%8F%E5%B2%A1</link>
            <guid>https://scrapbox.io/shokai/%E7%A6%8F%E5%B2%A1</guid>
            <pubDate>Sat, 01 Jun 2019 10:25:09 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://gyazo.com/02bb0b23cf9c15d5581c8ac7b0269d14"><img src="https://gyazo.com/02bb0b23cf9c15d5581c8ac7b0269d14/raw"/></a><br /><br /><br /><span><a href="https://scrapbox.io/shokai/%E4%B9%9D%E5%B7%9E">九州</a></span><span>の</span><span><a href="https://scrapbox.io/shokai/%E9%83%BD%E5%B8%82">都市</a></span><br /><br />N33.5256508,E130.3753782,Z7 福岡県福岡市<br /><br /><span>全体的に食べ物が安くてうまい印象</span><span>shokai.icon</span><br /><span><span>&nbsp;</span>適当に食べてもハズレが無かった</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[FGNエンジニアMeetup vol.1 - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/FGN%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2Meetup_vol.1</link>
            <guid>https://scrapbox.io/shokai/FGN%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2Meetup_vol.1</guid>
            <pubDate>Sat, 01 Jun 2019 08:49:58 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://fgn.connpass.com/event/129569/">https://fgn.connpass.com/event/129569/</a><br /><br />日時<br /><span><span>&nbsp;</span>2019/06/01(土) 18:30 〜 21:30</span><br /><br />場所<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%A6%8F%E5%B2%A1">福岡</a></span><span> Growth Next</span></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[SPA - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/SPA</link>
            <guid>https://scrapbox.io/shokai/SPA</guid>
            <pubDate>Sat, 01 Jun 2019 06:33:09 GMT</pubDate>
            <description><![CDATA[Single Page Applicationの事<br /><br />複数の画面を持つ複雑な動作をするアプリケーションだが<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%94%BB%E9%9D%A2%E9%81%B7%E7%A7%BB">画面遷移</a></span><span>する時に</span><span><a href="https://scrapbox.io/shokai/HTML">HTML</a></span><span>をまるごとリロードしない</span></span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/Ajax">Ajax</a></span><span>で通信し</span></span><br /><span><span>&nbsp;&nbsp;</span><span>JavaScriptで</span><span><a href="https://scrapbox.io/shokai/DOM">DOM</a></span><span>を部分的に書き換えて</span></span><br /><span><span>&nbsp;&nbsp;</span>表示を切り替える</span><br /><span><span>&nbsp;</span><span>URLは</span><span><a href="https://scrapbox.io/shokai/pushState">pushState</a></span><span>で書き換える</span></span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[network first - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/network_first</link>
            <guid>https://scrapbox.io/shokai/network_first</guid>
            <pubDate>Fri, 31 May 2019 21:13:25 GMT</pubDate>
            <description><![CDATA[<br /><span><a href="https://scrapbox.io/shokai/ServiceWorker">ServiceWorker</a></span><span>の振る舞いのパターン</span><br /><span><span>&nbsp;</span>ネットワークからまずデータを取得し、返す</span><br /><span><span>&nbsp;</span>失敗したらキャッシュから返す</span><br /><br /><span><a href="https://scrapbox.io/shokai/cache_first">cache first</a></span><span>が対になる</span><br /><br />network first, cache secondと言ったほうがわかりやすいかも<br />]]></description>
        </item>
        <item>
            <title><![CDATA[cache first - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/cache_first</link>
            <guid>https://scrapbox.io/shokai/cache_first</guid>
            <pubDate>Fri, 31 May 2019 21:13:01 GMT</pubDate>
            <description><![CDATA[<br /><span><a href="https://scrapbox.io/shokai/ServiceWorker">ServiceWorker</a></span><span>の振る舞いのパターン</span><br /><span><span>&nbsp;</span>キャッシュから即座に返す</span><br /><span><span>&nbsp;</span>キャッシュが見つからなければ、ネットワークから取得して返す</span><br /><br /><span><a href="https://scrapbox.io/shokai/network_first">network first</a></span><span>が対になる</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[Xパワー2300超えた - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/X%E3%83%91%E3%83%AF%E3%83%BC2300%E8%B6%85%E3%81%88%E3%81%9F</link>
            <guid>https://scrapbox.io/shokai/X%E3%83%91%E3%83%AF%E3%83%BC2300%E8%B6%85%E3%81%88%E3%81%9F</guid>
            <pubDate>Fri, 31 May 2019 18:56:14 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://scrapbox.io/shokai/Splatoon2">#Splatoon2</a><br /><br />2019年5月の出来事<br /><br />ヤグラ<br /><span><span>&nbsp;</span><a href="https://gyazo.com/6e91a0e4e53321715acedc4df3b61b7f"><img src="https://gyazo.com/6e91a0e4e53321715acedc4df3b61b7f/raw"/></a></span><br /><br /><br />アサリ<br /><span><span>&nbsp;</span><a href="https://gyazo.com/97a8c97beea421feff6e288109c0df44"><img src="https://gyazo.com/97a8c97beea421feff6e288109c0df44/raw"/></a></span><br /><br /><br />うれしい<br />]]></description>
        </item>
        <item>
            <title><![CDATA[Pull Requestに動作確認方法を書け - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/Pull_Request%E3%81%AB%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95%E3%82%92%E6%9B%B8%E3%81%91</link>
            <guid>https://scrapbox.io/shokai/Pull_Request%E3%81%AB%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95%E3%82%92%E6%9B%B8%E3%81%91</guid>
            <pubDate>Fri, 24 May 2019 05:08:55 GMT</pubDate>
            <description><![CDATA[<br /><strong>まとめ</strong><br /><br />自分がどう動作確認しているかを書きましょう<br /><span><span>&nbsp;</span>コードだけでなく、動作確認方法もレビューしてもらいましょう</span><br /><span><span>&nbsp;</span>動作確認方法がレビューできれば、手元で動かさなくてもLGTMできる、かもしれない</span><br /><br /><span>pull requestのレビューというのは、</span><span><a href="https://scrapbox.io/shokai/%E8%B2%AC%E4%BB%BB%E3%81%AE%E5%88%86%E6%95%A3">責任の分散</a></span><span>の為のダブルチェックなのだから</span><br /><span><span>&nbsp;</span>まずチェック項目に漏れが無い事を確認するべき</span><br /><span><span>&nbsp;&nbsp;</span>設定画面を変更したけど、これログイン画面にも影響しているよね、とか</span><br /><span><span>&nbsp;</span>次にチェック項目を2人とも実行してみて、本当にokか確認する</span><br /><br />悪いレビュー依頼<br /><span><span>&nbsp;</span>確認項目を明かさずレビューを依頼する</span><br /><span><span>&nbsp;</span>すると、両者がランダムに確認するだけになる</span><br /><span><span>&nbsp;&nbsp;</span>これはダブルチェックになっていない</span><br /><span><span>&nbsp;</span>両者が「相手なら自分の想定外の影響範囲もチェックしてくれてるだろ・・たぶん・・」という適当なLGTMを出す</span><br /><br /><span><a href="https://scrapbox.io/shokai/LGTM">LGTM</a></span><span>（見た感じ良いんじゃね？）</span><br /><span><span>&nbsp;</span><span><img src="どこを見てるのか"/></span><span>が重要</span></span><br /><span><span>&nbsp;&nbsp;</span>bugを探す時に、「どこを見ていないか」で推理できる</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>一見ちゃんと実装したように見えても、後で必ずbugは出るから</span><br /><span><span>&nbsp;</span><span>元々</span><span><a href="https://scrapbox.io/shokai/%E8%B2%AC%E4%BB%BB%E3%81%AE%E5%88%86%E6%95%A3">責任の分散</a></span><span>の為の風習なので、軽くやるべきなのは確かなのだが</span></span><br /><span><span>&nbsp;&nbsp;</span>確実に責任分散する為に</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>確実にダブルチェックしましょう</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>動作確認方法が明示されていないと、どちらか一方に責任が偏ってしまう</span><br /><br /><br />互いの想定している影響範囲が噛み合わない時に、変なゆずりあいの精神が発揮される<br /><span><span>&nbsp;</span>すると</span><br /><span><span>&nbsp;&nbsp;</span>bugを見落としたり</span><br /><span><span>&nbsp;&nbsp;</span>bugが起きた後の原因究明が遅れたりする</span><br /><span><span>&nbsp;</span>原因</span><br /><span><span>&nbsp;&nbsp;</span>「どこを見なかったか」が共有されていない為</span><br /><span><span>&nbsp;</span>対策</span><br /><span><span>&nbsp;&nbsp;</span>想定している影響範囲を共有しあおう</span><br /><span><span>&nbsp;&nbsp;</span>その為に、動作確認方法を書こう</span><br /><br /><br /><span>自分のOSSにプルリクが来た時の気持ち</span><span>shokai.icon</span><br /><span><span>&nbsp;</span>99%が、「何を変更した」しか書いてない</span><br /><span><span>&nbsp;&nbsp;</span>そんなものはコード読めばわかる</span><br /><span><span>&nbsp;</span>なぜ変更したのか？も知りたい</span><br /><span><span>&nbsp;</span>できれば「その影響範囲はどこまでだと考えているのか」も知りたい</span><br /><span><span>&nbsp;&nbsp;</span>わからなければ別にいいけど</span><br /><span><span>&nbsp;</span>俺はもうこのライブラリの実装覚えてないんだよ</span><br /><span><span>&nbsp;&nbsp;</span>どうやってお前のプルリクが余計なバグを産み出さないか検証すればいいのかわからん</span><br /><br /><br /><br /><br /><br />以下は思考<br /><br /><span><a href="https://scrapbox.io/shokai/pull_request">pull request</a></span><span>には</span><span><a href="https://scrapbox.io/shokai/%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95">動作確認方法</a></span><span>という項目を書くようにしている</span><br /><span><span>&nbsp;</span>レビュアーに対してどこをどう操作してチェックすれば良いか具体的に書く</span><br /><br />これはレビュアー側から見ると<br /><span><span>&nbsp;</span>pull request作成者が影響範囲がどこまでだと想定しているのかわかる</span><br /><span><span>&nbsp;</span>「この変更は、新規アカウント作成した所から動作確認しないとだめだよね」とか言える</span><br /><span><span>&nbsp;</span>コードだけでなく、確認方法についてレビューできる</span><br /><span><span>&nbsp;&nbsp;</span>レビュアーが手元で動作確認しなくても、方法だけレビューすれば良いかもしれない？</span><br /><span><span>&nbsp;&nbsp;</span>2人が動作確認した方がもちろん良いが</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>まあ場合による</span><br /><br /><span>ある程度アプリケーションの規模が大きくなってくると、ある変更がどこまでの影響範囲だと</span><span><img src="思っているのか"/></span><span>がコミュニケーションにおいて重要</span><br /><span><span>&nbsp;</span>あのへん影響ありそうだけど、◯◯氏なら想定しているだろうしレビューでチェックしなくていいかな？？</span><br /><span><span>&nbsp;&nbsp;</span>とか、お互いに考えてしまう</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span><span>これは面倒くさい、というかとても危険です。ヤバイ。</span><span>shokai.icon*5</span></span><br /><span><span>&nbsp;&nbsp;</span>それを指摘するのもコメント1往復して時間が無駄</span><br /><span><span>&nbsp;</span>「文言の変更だけなのでCI通れば良いと思います」とだけ書いてくれるだけで、助かる</span><br /><span><span>&nbsp;&nbsp;</span>そう思っているなら、そう書く</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>レビュアーに推測をさせない</span><br /><span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>純粋にレビューに集中させる</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>逆にレビュアーは「書かれていない事についてプルリク作成者は一切考慮していない。見落としている」と考えるべき</span><br /><span><span>&nbsp;&nbsp;</span>レビュアーは「文言の変更の影響範囲が意外な所まで及んでいないか」がすごく心配</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>長くなったテキストがデザイン破壊しないか？</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>英語版の言語ファイルも同時に修正しなければならない？</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>この文言が表示される状況は、どのタイミングなんだろう？</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>とか</span><br /><br /><br />確認操作を書く事で影響範囲が明確になる<br /><span><span>&nbsp;</span>レビューがしやすくなる、だけではない</span><br /><span><span>&nbsp;</span>プルリク作成者が、レビュー希望状態にする前に自力で気づくきっかけにもなる</span><br /><span><span>&nbsp;&nbsp;</span>あっちにも影響ありそうだぞ、とか</span><br /><span><span>&nbsp;</span>自分のpull requestの影響範囲がどこまでなのかを明確にし、それを動作確認手順として共有するとよい</span><br /><span><span>&nbsp;&nbsp;</span>レビュアーは、その影響範囲の境界の認識についてまずレビューする</span><br /><br />レビュアーは、pull requestの内容を見て自分が考えだした動作確認方法が正しいのか自信が持てない<br /><span><span>&nbsp;</span>ゼロから考えるのは難しい</span><br /><span><span>&nbsp;</span>先にたたき台があると叩ける</span><br /><br />「動作確認方法」が書いていない場合のレビュアーの気持ち<br /><span><span>&nbsp;</span>この変更の影響範囲をアプリケーション全体から特定するために全体のコードを読むぞ</span><br /><span><span>&nbsp;</span>いくらコード読んでもまだ心配だ</span><br /><span><span>&nbsp;&nbsp;</span>今日はもう寝よう</span><br /><span><span>&nbsp;&nbsp;</span>次の日「よく覚えてないけどまあいいや、LGTMです！」</span><br /><br />まとめ<br /><span><span>&nbsp;</span>pull requestを出す側は</span><br /><span><span>&nbsp;&nbsp;</span>具体的に自分がどこをどういう手順で操作して、動作確認したか、を書く</span><br /><span><span>&nbsp;&nbsp;</span>どこをレビューでチェックしてほしいか、ではない</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>いやどこを見てほしいかも書いても良いんだけど、そっちじゃない</span><br /><span><span>&nbsp;</span>変更した場所だけでなく、影響しそうな場所もローカルで動作させてみて確認するよね、それも書こうね</span><br /><span><span>&nbsp;</span>という話</span><br /><br />きっかけ<br /><span><span>&nbsp;</span>自分の所に来るOSSのpull requsetにレビュー方法とか一切書いて無くてmergeできない</span><br /><span><span>&nbsp;</span>もうコードが頭に入ってないので、その変更の影響範囲を想像できない</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC">コードレビュー</a></span><span>できない</span></span><br /><span><span>&nbsp;</span>せめてpull request送る側の頭の中で想定している影響範囲を教えてほしい</span><br />]]></description>
        </item>
        <item>
            <title><![CDATA[死んだテキストを置いておく倉庫にしない - 橋本商会 - Scrapbox]]></title>
            <link>https://scrapbox.io/shokai/%E6%AD%BB%E3%82%93%E3%81%A0%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E7%BD%AE%E3%81%84%E3%81%A6%E3%81%8A%E3%81%8F%E5%80%89%E5%BA%AB%E3%81%AB%E3%81%97%E3%81%AA%E3%81%84</link>
            <guid>https://scrapbox.io/shokai/%E6%AD%BB%E3%82%93%E3%81%A0%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E7%BD%AE%E3%81%84%E3%81%A6%E3%81%8A%E3%81%8F%E5%80%89%E5%BA%AB%E3%81%AB%E3%81%97%E3%81%AA%E3%81%84</guid>
            <pubDate>Thu, 23 May 2019 10:35:45 GMT</pubDate>
            <description><![CDATA[<br /><a href="https://scrapbox.io/shokai/Scrapbox%E3%81%AE%E5%93%B2%E5%AD%A6">#Scrapboxの哲学</a><br /><br /><span><a href="https://scrapbox.io/shokai/%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E8%A8%98%E6%B3%95">アイコン記法</a></span><span>や</span><span><a href="https://scrapbox.io/shokai/%E5%90%8C%E6%99%82%E7%B7%A8%E9%9B%86">同時編集</a></span><span>、</span><span><a href="https://scrapbox.io/shokai/%E9%96%A2%E9%80%A3%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%AA%E3%82%B9%E3%83%88">関連ページリスト</a></span><span>、そして</span><span><a href="https://scrapbox.io/forum-jp/%E8%A4%87%E9%9B%91%E3%81%AA%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E6%A8%A9%E9%99%90%E3%82%92%E6%8C%81%E3%81%9F%E3%81%AA%E3%81%84">/forum-jp/複雑なアクセス権限を持たない</a></span><span>などの元となっている考え</span><br /><br /><span>6年ぐらい前に、Scrapboxのプロトタイプである</span><span><a href="https://scrapbox.io/shokai/Gyazz">Gyazz</a></span><span>というWiKiを使っていた時</span><br /><span><span>&nbsp;</span><span>数人で1つのページに意見を書いて、議論・</span><span><a href="https://scrapbox.io/shokai/%E7%9B%B8%E8%AB%87">相談</a></span><span>するのが面白い</span></span><br /><span><span>&nbsp;&nbsp;</span>逸れた話、補足事項は別ページに分かれてリンクになる</span><br /><span><span>&nbsp;&nbsp;</span>チャット(skype)に差分通知が来る</span><br /><span><span>&nbsp;&nbsp;</span>完全に同時に書きあうのではなく、数日かけて議論し、考えが深まっていく</span><br /><span><span>&nbsp;</span>という経験があって、非常に気持ちよかった</span><br /><span><span>&nbsp;&nbsp;</span>脳の性能が引き上げられた感じがした</span><br /><br /><span><span>&nbsp;</span>その経験から、2つの要素を同時に満たしたいと考えた</span><br /><span><span>&nbsp;&nbsp;</span>1. 個人がアイディアを書き、考えを深める為の快適なテキストエディタ</span><br /><span><span>&nbsp;&nbsp;</span>2. 殴り書いたアイディアでも他人が読んで理解でき、議論を積み上げれるようにする機能</span><br /><span><span>&nbsp;</span>この2つをシームレスに行ったり来たりできると脳のリミッターが解除される</span><br /><br /><span><span>&nbsp;</span>1と2が同時に満たせていない時</span><br /><span><span>&nbsp;&nbsp;</span>そのツールとは別の手段で議論された決定事項だけが文書化され</span><br /><span><span>&nbsp;&nbsp;</span>Wiki管理者の承認を経て、保存されるようになる</span><br /><span><span>&nbsp;&nbsp;</span>この状態を「死んだテキストを置いておく倉庫」と呼ぶ</span><br /><br /><br /><br /><span>ほぼ全てのグループ向け</span><span><a href="https://scrapbox.io/shokai/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%83%84%E3%83%BC%E3%83%AB">ドキュメントツール</a></span><span>や</span><span><a href="https://scrapbox.io/shokai/WiKi">WiKi</a></span><span>は</span><br /><span><span>&nbsp;</span><span>決定事項を</span><span><a href="https://scrapbox.io/shokai/%E6%B8%85%E6%9B%B8">清書</a></span><span>してきれいに</span><span><a href="https://scrapbox.io/shokai/%E6%95%B4%E7%90%86%E6%95%B4%E9%A0%93">整理整頓</a></span><span>する機能ばかり強化している</span></span><br /><span><span>&nbsp;</span><span>書く事で考えを深めるとか、人と</span><span><a href="https://scrapbox.io/shokai/%E7%9B%B8%E8%AB%87">相談</a></span><span>する為の機能が全く無い</span></span><br /><span><span>&nbsp;&nbsp;</span>思索や相談は文書管理ツールとは別の場所でやる（下書き）</span><br /><span><span>&nbsp;&nbsp;</span>他人に伝えるたり証拠を残す為だけにグループ向け文書管理ツール向けに清書する</span><br /><br />2回同じテキストを書くのは完全に無駄で、この間何も進んでいないのに等しい。<br />めんどうくさい手順を踏むと、なぜか仕事やってる感や、謎の満足感を得られてしまうので気づきにくいけど、完全に無駄です<br /><br /><br />最初から、以下の2つが一緒になっているツールがほしい。<br /><span><span>&nbsp;</span>1. 考える為に書く場所</span><br /><span><span>&nbsp;</span>2. 人に伝える為に整理整頓する場所</span><br /><br />当然1と2を同時に満たすのは難しい<br /><span><span>&nbsp;</span>考えを書きなぐったメモは他人にとって意味不明な落書きなので</span><br /><span><span>&nbsp;&nbsp;</span>整理整頓の邪魔になる</span><br /><span><span>&nbsp;</span>整理整頓のために書式をしっかり決めると、思索はできない</span><br /><span><span>&nbsp;&nbsp;</span>何かを考えている時、「自分が何を考えているか」をはっきりと理解しているはずがない</span><br /><span><span>&nbsp;&nbsp;</span>むしろそれを見出す為に書いて考えている</span><br /><span><span>&nbsp;&nbsp;</span>一見関係ない過去のメモや事実との関連を見つける為に書いている</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>関連が見つかる事でようやく、何について考えていたのかが位置づけられる</span><br /><br /><br /><strong>人に伝える為に整理整頓する</strong><br /><br /><span>古典的な方法として</span><span><a href="https://scrapbox.io/shokai/%E9%9A%8E%E5%B1%A4%E6%95%B4%E7%90%86">階層整理</a></span><span>がある</span><br /><span><span>&nbsp;</span><span>階層化は、ネットワーク構造である事実の関係の塊に対して、自分の視点を与えて</span><span><a href="https://scrapbox.io/shokai/%E8%AB%96%E8%BF%B0">論述</a></span><span>する段階で使うべき手段</span></span><br /><span><span>&nbsp;</span>文系の論文では「切り口」というっぽい</span><br /><span><span>&nbsp;&nbsp;</span>事実と推論の塊・ネットワークに対して視点を与えて、論述する</span><br /><br /><span>複数人で</span><span><a href="https://scrapbox.io/shokai/%E8%80%83%E3%81%88%E7%B6%9A%E3%81%91%E3%82%8B">考え続ける</a></span><span>には、階層化は邪魔</span><br /><span><span>&nbsp;</span><span>グループ内の他人に考えを伝える為に、論述一歩手前の段階まで持っていく事を指して</span><span><a href="https://scrapbox.io/shokai/%E6%95%B4%E7%90%86%E6%95%B4%E9%A0%93">整理整頓</a></span><span>と言ってしまうのは思考や</span><span><a href="https://scrapbox.io/shokai/%E7%99%BA%E8%A6%8B">発見</a></span><span>の妨害でしかない</span></span><br /><span><span>&nbsp;</span>初期段階で階層化すると、別の「切り口」を見つけられなくなる</span><br /><span><span>&nbsp;</span>つまりメモはネットワーク状態で保持しておきたい</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E9%9A%8E%E5%B1%A4%E6%95%B4%E7%90%86%E5%9E%8BWiKi%E3%81%AF%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%AB%E3%81%97%E3%81%AA%E3%81%84">階層整理型WiKiはスケールしない</a></span><br /><br />ネットワーク状態でメモを保持する<br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E6%AF%8E%E5%9B%9E%E8%A8%98%E6%86%B6%E3%81%8C%E3%83%AA%E3%82%BB%E3%83%83%E3%83%88%E3%81%95%E3%82%8C%E3%82%8B%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2">毎回記憶がリセットされるメディア</a></span><span>にも書いたが、リンクで十分に文脈はわかる</span></span><br /><br /><br /><strong>考える為に書く</strong><br /><br />思いついた事を全部書き殴りたい<br /><span><span>&nbsp;</span>書き殴った事は素早く並び替えたりしたい</span><br /><span><span>&nbsp;&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E3%82%A2%E3%82%A6%E3%83%88%E3%83%A9%E3%82%A4%E3%83%B3%E7%B7%A8%E9%9B%86%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF">アウトライン編集テクニック</a></span><span>とかが使えると良い</span></span><br /><br />今考えてるのだから、周辺情報については今は書きたく無い<br /><span><span>&nbsp;</span>何について考えているのか</span><br /><span><span>&nbsp;</span>なぜ考えているのか</span><br /><br />しかし周辺情報を書く事で、考えが進んだりする可能性もある<br /><span><span>&nbsp;</span>最初に周辺情報を書きたいわけではないが、</span><br /><span><span>&nbsp;</span>考えをある程度書いている途中で周辺情報を書くと、良いことが多い</span><br /><span><span>&nbsp;&nbsp;</span>自分が昔メモした事に関係している事がわかって、2つの問題が一気に片付くきっかけになる</span><br /><span><span>&nbsp;&nbsp;</span>グループ内の他の人が、似た問題について既に思索を深めていたりする</span><br /><span><span>&nbsp;</span>どのタイミングででもリンクを貼ったり切ったりできると良いだろう</span><br /><span><span>&nbsp;&nbsp;</span>考える・整理する・伝えるといったフェーズに分離されると効率が悪い</span><br /><span><span>&nbsp;&nbsp;</span><span>順序立てたフェーズに分けず、</span><span><a href="https://scrapbox.io/shokai/%E9%A0%86%E4%B8%8D%E5%90%8C">順不同</a></span><span>に行う</span></span><br /><br />考えを邪魔する要素<br /><span><span>&nbsp;</span>例えば</span><br /><span><span>&nbsp;</span>ページ内に埋め込む画像サイズをピクセル数で指定できる機能があると、思考を邪魔してしまう</span><br /><span><span>&nbsp;&nbsp;</span>色々な人が色々な画面サイズ・デバイスで見ている</span><br /><span><span>&nbsp;&nbsp;</span>最適なサイズが人によって違うので、正解は無い</span><br /><span><span>&nbsp;&nbsp;</span>サイズが指定できないようにする事で争いを避ける</span><br /><span><span>&nbsp;&nbsp;</span><span>適当なサイズで埋め込む</span><span>[画像URL]</span><span>か、横幅100%の</span><span>[[画像URL]]</span><span>だけでいい</span></span><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/Keynote">Keynote</a></span><span>でプレゼン資料を作っていると、本文を書いている時間よりも文字の位置やサイズ調整に時間をかけている気がする</span></span><br /><span><span>&nbsp;&nbsp;</span><span>Keynoteの位置調整機能は</span><span><a href="https://scrapbox.io/shokai/PowerPoint">PowerPoint</a></span><span>に比べてかなり賢いが、賢いゆえに細かい所をチマチマといじってしまう</span></span><br /><span><span>&nbsp;&nbsp;</span>少しの手間でコントロール可能な場所が目につくと、コントロールしたくなってしまう</span><br /><span><span>&nbsp;&nbsp;</span>あとで振り返るとものすごい無駄な時間だった</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>新たな発見が何もない</span><br /><span><span>&nbsp;&nbsp;&nbsp;</span>プレゼン見てる側からも見た目に大差無い</span><br /><span><span>&nbsp;</span><a href="https://scrapbox.io/shokai/%E6%80%9D%E8%80%83%E3%82%92%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B%E8%A6%81%E7%B4%A0%E3%82%92%E6%B8%9B%E3%82%89%E3%81%97%E3%81%9F%E3%81%84">思考をブロックする要素を減らしたい</a></span><br /><br /><br /><strong>テキストがこの先生きのこるには</strong><br /><span><span>&nbsp;</span><span><a href="https://scrapbox.io/shokai/%E7%9B%B8%E8%AB%87">相談</a></span><span>できる仕組みが必要</span></span><br /><span><span>&nbsp;</span>人間が音声会話したりチャットに書いたりするのは</span><br /><span><span>&nbsp;&nbsp;</span>何がわからないのかわからない</span><br /><span><span>&nbsp;&nbsp;</span>誰が正解を知っているのかもわからない</span><br /><span><span>&nbsp;&nbsp;</span>自分が何について考えているのかすら、正確には理解していない</span><br /><span><span>&nbsp;</span>そういう状況で、前進する為で</span><br /><span><span>&nbsp;</span>それをなんとかする要素が、会話やチャットとかにはある</span><br /><span><span>&nbsp;&nbsp;</span>ターゲットに対してリアルタイムに割り込み通知できる</span><br /><span><span>&nbsp;&nbsp;</span>往復の中で精度を上げられる</span><br /><span><span>&nbsp;&nbsp;</span>とか色々あるだろうけど</span><br />]]></description>
        </item>
    </channel>
</rss>